/* Operation: setLinks
Input:  nodeTemplate of resource to be created.
Description: Creates for every relationship template that has the nodeTemplate as source a Link.
Furthermore it fills out the target property of the links, which had the corresponding resource as target.
(could be splitted)*/
operation OCCI!Resource setLinks(nodeTemplate : TOSCA!TNodeTemplate) {
	if(targetsToBeAdded.containsKey(nodeTemplate.id)){	
		for(link in targetsToBeAdded.get(nodeTemplate.id)) {
			link.target = self;
		}
		parentToBeAdded.remove(nodeTemplate.id);
	}
	if(sourcesToBeAdded.containsKey(nodeTemplate.id)){	
		for(link in sourcesToBeAdded.get(nodeTemplate.id)) {
			self.links.add(link);
		}
		parentToBeAdded.remove(nodeTemplate.id);
	}
}

operation TOSCA!TNodeTemplate createPlacementLinkForIncomings(targetID: String){
	if (self.capabilities.isDefined() and self.capabilities <> null){
		var capabilityIDs = self.capabilities.capability.collect(c | c.id);

		var relationshipsToConsider = TOSCA!HostedOn.allInstances().select(r | capabilityIDs.contains(r.targetElement.ref.id));
		for (relationship in relationshipsToConsider){
			var placementLink = new OCCI!Link;
			placementLink.kind = OCCI!Kind.allInstances.selectOne(k | k.term == "placementlink");
			
			var targetResource = OCCI!Resource.allInstances.selectOne(r | r.id == targetID);
			placementLink.target = targetResource;
		
			if (targetResource == null){
				//"Target Resource is not transformed yet".println();
				if(targetsToBeAdded.containsKey(targetID)){
					targetsToBeAdded.get(targetID).add(placementLink);	
				}
				else{
					var bag = new Bag;
					bag.add(placementLink);
					targetsToBeAdded.put(targetID, bag);
				}
			}
			
			var sourceRequirement = relationship.sourceElement.ref;
			var sourceID = sourceRequirement.econtainer.econtainer.id;
			var sourceResource = OCCI!Resource.allInstances.selectOne(r | r.id = sourceID);
			
			if (sourceResource == null){
				//("Source Resource " + sourceRequirement.econtainer.econtainer.id + " is not transformed yet").println();
				if(sourcesToBeAdded.containsKey(sourceID)){
					sourcesToBeAdded.get(sourceID).add(placementLink);	
				}
				else{
					var bag = new Bag;
					bag.add(placementLink);
					sourcesToBeAdded.put(sourceID, bag);
				}
			}
			else {
				sourceResource.links.add(placementLink);
			}
			var sourceNodeTemplate = TOSCA!TNodeTemplate.allInstances.selectOne(n | n.id = sourceRequirement.econtainer.econtainer.id);
			
		 	placementLink.id = sourceNodeTemplate.id + "_placedOn_" + targetID;
			sourceNodeTemplate.createPlacementLinkForIncomings(targetID);
		}
	} 
}


