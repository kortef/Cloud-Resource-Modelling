/**
 */
package de.ugoe.cs.oco.tosca.types.provider;

import de.ugoe.cs.oco.tosca.PlanModelType;
import de.ugoe.cs.oco.tosca.PropertiesType;
import de.ugoe.cs.oco.tosca.PropertiesType1;
import de.ugoe.cs.oco.tosca.RelationshipConstraintType;
import de.ugoe.cs.oco.tosca.TCondition;
import de.ugoe.cs.oco.tosca.TConstraint;
import de.ugoe.cs.oco.tosca.TDocumentation;
import de.ugoe.cs.oco.tosca.TExtensibleElements;
import de.ugoe.cs.oco.tosca.ToscaPackage;
import de.ugoe.cs.oco.tosca.TypesType;
import de.ugoe.cs.oco.tosca.types.TypesFactory;
import de.ugoe.cs.oco.tosca.types.TypesPackage;
import de.ugoe.cs.oco.tosca.types.util.TypesAdapterFactory;

import de.ugoe.cs.oco.tosca.util.ToscaSwitch;
import java.util.ArrayList;
import java.util.Collection;

import java.util.List;
import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.util.FeatureMapUtil;
import org.eclipse.emf.edit.command.CommandParameter;
import org.eclipse.emf.edit.domain.EditingDomain;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class TypesItemProviderAdapterFactory extends TypesAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public TypesItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.ugoe.cs.oco.tosca.types.CloudifyAgentPropertiesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CloudifyAgentPropertiesTypeItemProvider cloudifyAgentPropertiesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.ugoe.cs.oco.tosca.types.CloudifyAgentPropertiesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCloudifyAgentPropertiesTypeAdapter() {
		if (cloudifyAgentPropertiesTypeItemProvider == null) {
			cloudifyAgentPropertiesTypeItemProvider = new CloudifyAgentPropertiesTypeItemProvider(this);
		}

		return cloudifyAgentPropertiesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.ugoe.cs.oco.tosca.types.DocumentRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentRootItemProvider documentRootItemProvider;

	/**
	 * This creates an adapter for a {@link de.ugoe.cs.oco.tosca.types.DocumentRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentRootAdapter() {
		if (documentRootItemProvider == null) {
			documentRootItemProvider = new DocumentRootItemProvider(this);
		}

		return documentRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.ugoe.cs.oco.tosca.types.FloatingIPPropertiesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FloatingIPPropertiesTypeItemProvider floatingIPPropertiesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.ugoe.cs.oco.tosca.types.FloatingIPPropertiesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFloatingIPPropertiesTypeAdapter() {
		if (floatingIPPropertiesTypeItemProvider == null) {
			floatingIPPropertiesTypeItemProvider = new FloatingIPPropertiesTypeItemProvider(this);
		}

		return floatingIPPropertiesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.ugoe.cs.oco.tosca.types.HostPropertiesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HostPropertiesTypeItemProvider hostPropertiesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.ugoe.cs.oco.tosca.types.HostPropertiesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHostPropertiesTypeAdapter() {
		if (hostPropertiesTypeItemProvider == null) {
			hostPropertiesTypeItemProvider = new HostPropertiesTypeItemProvider(this);
		}

		return hostPropertiesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.ugoe.cs.oco.tosca.types.KeyPairPropertiesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KeyPairPropertiesTypeItemProvider keyPairPropertiesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.ugoe.cs.oco.tosca.types.KeyPairPropertiesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKeyPairPropertiesTypeAdapter() {
		if (keyPairPropertiesTypeItemProvider == null) {
			keyPairPropertiesTypeItemProvider = new KeyPairPropertiesTypeItemProvider(this);
		}

		return keyPairPropertiesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.ugoe.cs.oco.tosca.types.OpenStackFloatingIPPropertiesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OpenStackFloatingIPPropertiesTypeItemProvider openStackFloatingIPPropertiesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.ugoe.cs.oco.tosca.types.OpenStackFloatingIPPropertiesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOpenStackFloatingIPPropertiesTypeAdapter() {
		if (openStackFloatingIPPropertiesTypeItemProvider == null) {
			openStackFloatingIPPropertiesTypeItemProvider = new OpenStackFloatingIPPropertiesTypeItemProvider(this);
		}

		return openStackFloatingIPPropertiesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.ugoe.cs.oco.tosca.types.OpenStackServerPropertiesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OpenStackServerPropertiesTypeItemProvider openStackServerPropertiesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.ugoe.cs.oco.tosca.types.OpenStackServerPropertiesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOpenStackServerPropertiesTypeAdapter() {
		if (openStackServerPropertiesTypeItemProvider == null) {
			openStackServerPropertiesTypeItemProvider = new OpenStackServerPropertiesTypeItemProvider(this);
		}

		return openStackServerPropertiesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.ugoe.cs.oco.tosca.types.OpenStackVolumePropertiesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OpenStackVolumePropertiesTypeItemProvider openStackVolumePropertiesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.ugoe.cs.oco.tosca.types.OpenStackVolumePropertiesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOpenStackVolumePropertiesTypeAdapter() {
		if (openStackVolumePropertiesTypeItemProvider == null) {
			openStackVolumePropertiesTypeItemProvider = new OpenStackVolumePropertiesTypeItemProvider(this);
		}

		return openStackVolumePropertiesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.ugoe.cs.oco.tosca.types.ScalingGroupPropertiesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScalingGroupPropertiesTypeItemProvider scalingGroupPropertiesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.ugoe.cs.oco.tosca.types.ScalingGroupPropertiesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScalingGroupPropertiesTypeAdapter() {
		if (scalingGroupPropertiesTypeItemProvider == null) {
			scalingGroupPropertiesTypeItemProvider = new ScalingGroupPropertiesTypeItemProvider(this);
		}

		return scalingGroupPropertiesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.ugoe.cs.oco.tosca.types.ScalingPropertiesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScalingPropertiesTypeItemProvider scalingPropertiesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.ugoe.cs.oco.tosca.types.ScalingPropertiesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScalingPropertiesTypeAdapter() {
		if (scalingPropertiesTypeItemProvider == null) {
			scalingPropertiesTypeItemProvider = new ScalingPropertiesTypeItemProvider(this);
		}

		return scalingPropertiesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.ugoe.cs.oco.tosca.types.VolumeHostPropertiesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VolumeHostPropertiesTypeItemProvider volumeHostPropertiesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link de.ugoe.cs.oco.tosca.types.VolumeHostPropertiesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVolumeHostPropertiesTypeAdapter() {
		if (volumeHostPropertiesTypeItemProvider == null) {
			volumeHostPropertiesTypeItemProvider = new VolumeHostPropertiesTypeItemProvider(this);
		}

		return volumeHostPropertiesTypeItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (cloudifyAgentPropertiesTypeItemProvider != null) cloudifyAgentPropertiesTypeItemProvider.dispose();
		if (documentRootItemProvider != null) documentRootItemProvider.dispose();
		if (floatingIPPropertiesTypeItemProvider != null) floatingIPPropertiesTypeItemProvider.dispose();
		if (hostPropertiesTypeItemProvider != null) hostPropertiesTypeItemProvider.dispose();
		if (keyPairPropertiesTypeItemProvider != null) keyPairPropertiesTypeItemProvider.dispose();
		if (openStackFloatingIPPropertiesTypeItemProvider != null) openStackFloatingIPPropertiesTypeItemProvider.dispose();
		if (openStackServerPropertiesTypeItemProvider != null) openStackServerPropertiesTypeItemProvider.dispose();
		if (openStackVolumePropertiesTypeItemProvider != null) openStackVolumePropertiesTypeItemProvider.dispose();
		if (scalingGroupPropertiesTypeItemProvider != null) scalingGroupPropertiesTypeItemProvider.dispose();
		if (scalingPropertiesTypeItemProvider != null) scalingPropertiesTypeItemProvider.dispose();
		if (volumeHostPropertiesTypeItemProvider != null) volumeHostPropertiesTypeItemProvider.dispose();
	}

	/**
	 * A child creation extender for the {@link ToscaPackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static class ToscaChildCreationExtender implements IChildCreationExtender {
		/**
		 * The switch for creating child descriptors specific to each extended class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		protected static class CreationSwitch extends ToscaSwitch<Object> {
			/**
			 * The child descriptors being populated.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected List<Object> newChildDescriptors;

			/**
			 * The domain in which to create the children.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected EditingDomain editingDomain;

			/**
			 * Creates the a switch for populating child descriptors in the given domain.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			CreationSwitch(List<Object> newChildDescriptors, EditingDomain editingDomain) {
				this.newChildDescriptors = newChildDescriptors;
				this.editingDomain = editingDomain;
			}
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object casePlanModelType(PlanModelType object) {
				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PLAN_MODEL_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__CLOUDIFY_AGENT_PROPERTIES,
							 TypesFactory.eINSTANCE.createCloudifyAgentPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PLAN_MODEL_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__FLOATING_IP_PROPERTIES,
							 TypesFactory.eINSTANCE.createFloatingIPPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PLAN_MODEL_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__KEY_PAIR_PROPERTIES,
							 TypesFactory.eINSTANCE.createKeyPairPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PLAN_MODEL_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__MPI_HOST_PROPERTIES,
							 TypesFactory.eINSTANCE.createHostPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PLAN_MODEL_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_FLOATING_IP_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackFloatingIPPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PLAN_MODEL_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackServerPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PLAN_MODEL_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_VOLUME_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackVolumePropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PLAN_MODEL_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__SCALING_GROUP_PROPERTIES,
							 TypesFactory.eINSTANCE.createScalingGroupPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PLAN_MODEL_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__VOLUME_HOST_PROPERTIES_TYPE,
							 TypesFactory.eINSTANCE.createVolumeHostPropertiesType())));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object casePropertiesType(PropertiesType object) {
				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PROPERTIES_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__CLOUDIFY_AGENT_PROPERTIES,
							 TypesFactory.eINSTANCE.createCloudifyAgentPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PROPERTIES_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__FLOATING_IP_PROPERTIES,
							 TypesFactory.eINSTANCE.createFloatingIPPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PROPERTIES_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__KEY_PAIR_PROPERTIES,
							 TypesFactory.eINSTANCE.createKeyPairPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PROPERTIES_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__MPI_HOST_PROPERTIES,
							 TypesFactory.eINSTANCE.createHostPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PROPERTIES_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_FLOATING_IP_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackFloatingIPPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PROPERTIES_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackServerPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PROPERTIES_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_VOLUME_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackVolumePropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PROPERTIES_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__SCALING_GROUP_PROPERTIES,
							 TypesFactory.eINSTANCE.createScalingGroupPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PROPERTIES_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__VOLUME_HOST_PROPERTIES_TYPE,
							 TypesFactory.eINSTANCE.createVolumeHostPropertiesType())));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object casePropertiesType1(PropertiesType1 object) {
				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PROPERTIES_TYPE1__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__CLOUDIFY_AGENT_PROPERTIES,
							 TypesFactory.eINSTANCE.createCloudifyAgentPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PROPERTIES_TYPE1__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__FLOATING_IP_PROPERTIES,
							 TypesFactory.eINSTANCE.createFloatingIPPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PROPERTIES_TYPE1__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__KEY_PAIR_PROPERTIES,
							 TypesFactory.eINSTANCE.createKeyPairPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PROPERTIES_TYPE1__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__MPI_HOST_PROPERTIES,
							 TypesFactory.eINSTANCE.createHostPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PROPERTIES_TYPE1__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_FLOATING_IP_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackFloatingIPPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PROPERTIES_TYPE1__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackServerPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PROPERTIES_TYPE1__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_VOLUME_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackVolumePropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PROPERTIES_TYPE1__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__SCALING_GROUP_PROPERTIES,
							 TypesFactory.eINSTANCE.createScalingGroupPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.PROPERTIES_TYPE1__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__VOLUME_HOST_PROPERTIES_TYPE,
							 TypesFactory.eINSTANCE.createVolumeHostPropertiesType())));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseRelationshipConstraintType(RelationshipConstraintType object) {
				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.RELATIONSHIP_CONSTRAINT_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__CLOUDIFY_AGENT_PROPERTIES,
							 TypesFactory.eINSTANCE.createCloudifyAgentPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.RELATIONSHIP_CONSTRAINT_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__FLOATING_IP_PROPERTIES,
							 TypesFactory.eINSTANCE.createFloatingIPPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.RELATIONSHIP_CONSTRAINT_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__KEY_PAIR_PROPERTIES,
							 TypesFactory.eINSTANCE.createKeyPairPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.RELATIONSHIP_CONSTRAINT_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__MPI_HOST_PROPERTIES,
							 TypesFactory.eINSTANCE.createHostPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.RELATIONSHIP_CONSTRAINT_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_FLOATING_IP_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackFloatingIPPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.RELATIONSHIP_CONSTRAINT_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackServerPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.RELATIONSHIP_CONSTRAINT_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_VOLUME_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackVolumePropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.RELATIONSHIP_CONSTRAINT_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__SCALING_GROUP_PROPERTIES,
							 TypesFactory.eINSTANCE.createScalingGroupPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.RELATIONSHIP_CONSTRAINT_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__VOLUME_HOST_PROPERTIES_TYPE,
							 TypesFactory.eINSTANCE.createVolumeHostPropertiesType())));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseTCondition(TCondition object) {
				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TCONDITION__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__CLOUDIFY_AGENT_PROPERTIES,
							 TypesFactory.eINSTANCE.createCloudifyAgentPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TCONDITION__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__FLOATING_IP_PROPERTIES,
							 TypesFactory.eINSTANCE.createFloatingIPPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TCONDITION__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__KEY_PAIR_PROPERTIES,
							 TypesFactory.eINSTANCE.createKeyPairPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TCONDITION__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__MPI_HOST_PROPERTIES,
							 TypesFactory.eINSTANCE.createHostPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TCONDITION__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_FLOATING_IP_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackFloatingIPPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TCONDITION__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackServerPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TCONDITION__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_VOLUME_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackVolumePropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TCONDITION__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__SCALING_GROUP_PROPERTIES,
							 TypesFactory.eINSTANCE.createScalingGroupPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TCONDITION__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__VOLUME_HOST_PROPERTIES_TYPE,
							 TypesFactory.eINSTANCE.createVolumeHostPropertiesType())));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseTConstraint(TConstraint object) {
				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TCONSTRAINT__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__CLOUDIFY_AGENT_PROPERTIES,
							 TypesFactory.eINSTANCE.createCloudifyAgentPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TCONSTRAINT__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__FLOATING_IP_PROPERTIES,
							 TypesFactory.eINSTANCE.createFloatingIPPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TCONSTRAINT__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__KEY_PAIR_PROPERTIES,
							 TypesFactory.eINSTANCE.createKeyPairPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TCONSTRAINT__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__MPI_HOST_PROPERTIES,
							 TypesFactory.eINSTANCE.createHostPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TCONSTRAINT__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_FLOATING_IP_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackFloatingIPPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TCONSTRAINT__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackServerPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TCONSTRAINT__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_VOLUME_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackVolumePropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TCONSTRAINT__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__SCALING_GROUP_PROPERTIES,
							 TypesFactory.eINSTANCE.createScalingGroupPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TCONSTRAINT__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__VOLUME_HOST_PROPERTIES_TYPE,
							 TypesFactory.eINSTANCE.createVolumeHostPropertiesType())));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseTDocumentation(TDocumentation object) {
				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TDOCUMENTATION__MIXED,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__CLOUDIFY_AGENT_PROPERTIES,
							 TypesFactory.eINSTANCE.createCloudifyAgentPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TDOCUMENTATION__MIXED,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__FLOATING_IP_PROPERTIES,
							 TypesFactory.eINSTANCE.createFloatingIPPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TDOCUMENTATION__MIXED,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__KEY_PAIR_PROPERTIES,
							 TypesFactory.eINSTANCE.createKeyPairPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TDOCUMENTATION__MIXED,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__MPI_HOST_PROPERTIES,
							 TypesFactory.eINSTANCE.createHostPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TDOCUMENTATION__MIXED,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_FLOATING_IP_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackFloatingIPPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TDOCUMENTATION__MIXED,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackServerPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TDOCUMENTATION__MIXED,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_VOLUME_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackVolumePropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TDOCUMENTATION__MIXED,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__SCALING_GROUP_PROPERTIES,
							 TypesFactory.eINSTANCE.createScalingGroupPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TDOCUMENTATION__MIXED,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__VOLUME_HOST_PROPERTIES_TYPE,
							 TypesFactory.eINSTANCE.createVolumeHostPropertiesType())));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseTExtensibleElements(TExtensibleElements object) {
				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TEXTENSIBLE_ELEMENTS__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__CLOUDIFY_AGENT_PROPERTIES,
							 TypesFactory.eINSTANCE.createCloudifyAgentPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TEXTENSIBLE_ELEMENTS__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__FLOATING_IP_PROPERTIES,
							 TypesFactory.eINSTANCE.createFloatingIPPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TEXTENSIBLE_ELEMENTS__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__KEY_PAIR_PROPERTIES,
							 TypesFactory.eINSTANCE.createKeyPairPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TEXTENSIBLE_ELEMENTS__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__MPI_HOST_PROPERTIES,
							 TypesFactory.eINSTANCE.createHostPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TEXTENSIBLE_ELEMENTS__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_FLOATING_IP_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackFloatingIPPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TEXTENSIBLE_ELEMENTS__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackServerPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TEXTENSIBLE_ELEMENTS__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_VOLUME_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackVolumePropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TEXTENSIBLE_ELEMENTS__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__SCALING_GROUP_PROPERTIES,
							 TypesFactory.eINSTANCE.createScalingGroupPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TEXTENSIBLE_ELEMENTS__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__VOLUME_HOST_PROPERTIES_TYPE,
							 TypesFactory.eINSTANCE.createVolumeHostPropertiesType())));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseTypesType(TypesType object) {
				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TYPES_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__CLOUDIFY_AGENT_PROPERTIES,
							 TypesFactory.eINSTANCE.createCloudifyAgentPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TYPES_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__FLOATING_IP_PROPERTIES,
							 TypesFactory.eINSTANCE.createFloatingIPPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TYPES_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__KEY_PAIR_PROPERTIES,
							 TypesFactory.eINSTANCE.createKeyPairPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TYPES_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__MPI_HOST_PROPERTIES,
							 TypesFactory.eINSTANCE.createHostPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TYPES_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_FLOATING_IP_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackFloatingIPPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TYPES_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackServerPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TYPES_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__OPEN_STACK_VOLUME_PROPERTIES,
							 TypesFactory.eINSTANCE.createOpenStackVolumePropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TYPES_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__SCALING_GROUP_PROPERTIES,
							 TypesFactory.eINSTANCE.createScalingGroupPropertiesType())));

				newChildDescriptors.add
					(createChildParameter
						(ToscaPackage.Literals.TYPES_TYPE__ANY,
						 FeatureMapUtil.createEntry
							(TypesPackage.Literals.DOCUMENT_ROOT__VOLUME_HOST_PROPERTIES_TYPE,
							 TypesFactory.eINSTANCE.createVolumeHostPropertiesType())));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected CommandParameter createChildParameter(Object feature, Object child) {
				return new CommandParameter(null, feature, child);
			}

		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public Collection<Object> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
			ArrayList<Object> result = new ArrayList<Object>();
			new CreationSwitch(result, editingDomain).doSwitch((EObject)object);
			return result;
		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public ResourceLocator getResourceLocator() {
			return PropertyTypesEditPlugin.INSTANCE;
		}
	}

}
