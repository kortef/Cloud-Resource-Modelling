/* Operation: getConfiguration
Description: Configuration File to Map pre existing types to names, which has to be checked for.*/
operation getTypeMapping() : Map {
	var configuration = new Map;
	/*configuration.put("tosca.nodes.Compute", "component");
	configuration.put("tosca.nodes.SoftwareComponent", "component");
	configuration.put("tosca.nodes.WebServer", "component");
	configuration.put("tosca.nodes.BlockStorage", "component");
	configuration.put("tosca.nodes.network.Network", "network");
	configuration.put("tosca.relationships.AttachesTo", "storagelink");
	configuration.put("tosca.relationships.ConnectsTo", "networkInterface");
	configuration.put("tosca.relationships.HostedOn", "placementLink");
	*/
    configuration.put("SugarCRMApplication", "component");
	configuration.put("SugarCRMDatabase", "component");
	//configuration.put("RootNodeType", "");
	//configuration.put("Tier", "");
	//configuration.put("SingleNodeTier", "");
	//configuration.put("ScalableTier", "");
	configuration.put("Server", "compute");
	//configuration.put("OperatingSystem", "");
	configuration.put("WebServer", "component");
	configuration.put("WebApplication", "component");
	configuration.put("DBMS", "dbms");
	configuration.put("Database", "database");
	configuration.put("ApacheWebServer", "component");
	configuration.put("ApacheWebApplication", "component");
	configuration.put("ApacheModule", "component");
	configuration.put("ApachePHPModule", "component");
	configuration.put("MySQL", "component");
	configuration.put("MySQLDatabase", "component");
	configuration.put("SugarCRMDatabaseConnection", "componentlink");
	configuration.put("RootRelationshipType", "link");
	configuration.put("HostedOn", "componentlink");
	configuration.put("DependsOn", "componentlink");
	configuration.put("ConnectsTo", "networkinterface");
	configuration.put("MySQLDatabaseHostedOnMySQL", "componentlink");
	configuration.put("MySQLDatabaseConnection", "componentlink");
	return configuration;
}

operation getMixinMapping(): Map {
	var mixinMapping = new Map;
	mixinMapping.put("SugarCRMApplication", "SugarCRMApplication");
	mixinMapping.put("SugarCRMDatabase", "SugarCRMDatabase");
	//mixinMapping.put("Tier", "");
	//mixinMapping.put("SingleNodeTier", "SingleNodeTier");
	//mixinMapping.put("ScalableTier", "");
	//mixinMapping.put("Server", "compute");
	//mixinMapping.put("OperatingSystem", "");
	mixinMapping.put("WebServer", "WebServer");
	mixinMapping.put("WebApplication", "WebApplication");
	mixinMapping.put("DBMS", "DBMS");
	mixinMapping.put("Database", "Database");
	mixinMapping.put("ApacheWebServer", "ApacheWebServer");
	mixinMapping.put("ApacheWebApplication", "ApacheWebApplication");
	mixinMapping.put("ApacheModule", "ApacheModule");
	mixinMapping.put("ApachePHPModule", "ApachePHPModule");
	mixinMapping.put("MySQL", "MySQL");
	mixinMapping.put("MySQLDatabase", "MySQLDatabase");
	mixinMapping.put("SugarCRMDatabaseConnection", "storagelink");
	mixinMapping.put("RootRelationshipType", "link");
	mixinMapping.put("HostedOn", "componentlink");
	mixinMapping.put("DependsOn", "componentlink");
	mixinMapping.put("ConnectsTo", "networkinterface");
	mixinMapping.put("MySQLDatabaseHostedOnMySQL", "componentlink");
	mixinMapping.put("MySQLDatabaseConnection", "componentlink");
	
	return mixinMapping; 
}