operation OCCI!Resource setAttributeStatesFromNormative(normativePropertiesType: Any){
	var state: OCCI!AttributeState;
	var propertyObject = normativePropertiesType.value;
	if (propertyObject.isTypeOf(TOSCA!TSugarCRMApplicationProperties)){
		var state = new OCCI!AttributeState();
		state.name = "AdminUser";
		state.value = propertyObject.adminUser.toString();
		self.getAttributes.add(state);
		var state = new OCCI!AttributeState();
		state.name = "AdminPassword";
		state.value = propertyObject.adminPassword.toString();
		self.getAttributes.add(state);
		var state = new OCCI!AttributeState();
		state.name = "SiteName";
		state.value = propertyObject.siteName.toString();
		self.getAttributes.add(state);
		var state = new OCCI!AttributeState();
		state.name = "SitePath";
		state.value = propertyObject.sitePath.toString();
		self.getAttributes.add(state);
	}
	if (propertyObject.isTypeOf(TOSCA!TSugarCRMDatabaseProperties)){
		var state = new OCCI!AttributeState();
		state.name = "DBName";
		state.value = propertyObject.dBName.toString();
		self.getAttributes.add(state);
		var state = new OCCI!AttributeState();
		state.name = "DBUser";
		state.value = propertyObject.dBUser.toString();
		self.getAttributes.add(state);
		var state = new OCCI!AttributeState();
		state.name = "DBPassword";
		state.value = propertyObject.dBPassword.toString();
		self.getAttributes.add(state);
		var state = new OCCI!AttributeState();
		state.name = "DBPort";
		state.value = propertyObject.dBPort.toString();
		self.getAttributes.add(state);
	}
	if (propertyObject.isTypeOf(TOSCA!TMySQLProperties)){
		var state = new OCCI!AttributeState();
		state.name = "RootPassword";
		state.value = propertyObject.rootPassword;
		self.getAttributes.add(state);
	}
	if (propertyObject.isTypeOf(TOSCA!TApacheWebServerProperties)){
		var state = new OCCI!AttributeState();
		state.name = "Httpdport";
		state.value = propertyObject.httpdport.toString();
		self.getAttributes.add(state);
	}
	if (propertyObject.isTypeOf(TOSCA!TOsPackageArtifactProperties)){
		var state = new OCCI!AttributeState();
		state.name = "PackageInformation";
		state.value = propertyObject.packageInformation.toString();
		self.getAttributes.add(state);
		var state = new OCCI!AttributeState();
		state.name = "PackageType";
		state.value = propertyObject.packageType.toString();
		self.getAttributes.add(state);
	}
	if (propertyObject.isTypeOf(TOSCA!TFileArtifactContextProperties)){
		var state = new OCCI!AttributeState();
		state.name = "FileDeploymentInformation";
		state.value = propertyObject.fileDeploymentInformation.toString();
		self.getAttributes.add(state);
	}
	if (propertyObject.isTypeOf(TOSCA!TBaseArtifactContextProperties)){
	}
	if (propertyObject.isTypeOf(TOSCA!TScriptArtifactProperties)){
		var state = new OCCI!AttributeState();
		state.name = "ScriptLanguage";
		state.value = propertyObject.scriptLanguage.toString();
		self.getAttributes.add(state);
		var state = new OCCI!AttributeState();
		state.name = "PrimaryScript";
		state.value = propertyObject.primaryScript.toString();
		self.getAttributes.add(state);
	}
	if (propertyObject.isTypeOf(TOSCA!TUserContentArtifactProperties)){
		var state = new OCCI!AttributeState();
		state.name = "UserSpec";
		state.value = propertyObject.userSpec.toString();
		self.getAttributes.add(state);
	}
	if (propertyObject.isTypeOf(TOSCA!TProperties)){
		var state = new OCCI!AttributeState();
		state.name = "Property";
		state.value = propertyObject.property.toString();
		self.getAttributes.add(state);
	}
	if (propertyObject.isTypeOf(TOSCA!TRPMGroupArtifactProperties)){
		var state = new OCCI!AttributeState();
		state.name = "GroupInformation";
		state.value = propertyObject.groupInformation.toString();
		self.getAttributes.add(state);
	}
	if (propertyObject.isTypeOf(TOSCA!TArchiveArtifactProperties)){
		var state = new OCCI!AttributeState();
		state.name = "ArchiveInformation";
		state.value = propertyObject.archiveInformation.toString();
		self.getAttributes.add(state);
	}
	if (propertyObject.isTypeOf(TOSCA!TArchiveArtifactContextProperties)){
		var state = new OCCI!AttributeState();
		state.name = "ArchiveDeploymentInformation";
		state.value = propertyObject.archiveDeploymentInformation.toString();
		self.getAttributes.add(state);
	}
	if (propertyObject.isTypeOf(TOSCA!TBaseArtifactProperties)){
		var state = new OCCI!AttributeState();
		state.name = "IdentityProperties";
		state.value = propertyObject.identityProperties.toString();
		self.getAttributes.add(state);
	}
	if (propertyObject.isTypeOf(TOSCA!TFileArtifactProperties)){
	}
	if (propertyObject.isTypeOf(TOSCA!TChefArtifactProperties)){
		var state = new OCCI!AttributeState();
		state.name = "Cookbooks";
		state.value = propertyObject.cookbooks.toString();
		self.getAttributes.add(state);
		var state = new OCCI!AttributeState();
		state.name = "Roles";
		state.value = propertyObject.roles.toString();
		self.getAttributes.add(state);
		var state = new OCCI!AttributeState();
		state.name = "Mappings";
		state.value = propertyObject.mappings.toString();
		self.getAttributes.add(state);
		var state = new OCCI!AttributeState();
		state.name = "RunList";
		state.value = propertyObject.runList.toString();
		self.getAttributes.add(state);
	}
	if (propertyObject.isTypeOf(TOSCA!TServerProperties)){
		var state = new OCCI!AttributeState();
		state.name = "occi.compute.cores";
		state.value = propertyObject.numCpus.toString();
		self.getAttributes.add(state);
		var state = new OCCI!AttributeState();
		state.name = "occi.compute.memory";
		state.value = propertyObject.memory.toString();
		self.getAttributes.add(state);
	}
	
}
	
	