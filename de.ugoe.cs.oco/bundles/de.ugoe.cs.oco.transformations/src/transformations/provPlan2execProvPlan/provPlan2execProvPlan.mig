pre {
	"Starting provPlan2execProvPlan Migration...".println();
	var ip = "192.168.34.1:43529";
	var version = "occi1.1";
	var tokenVar = "$OS_TOKEN";
}
post {
 	"Migration Process was Successfull".println();
}
//-------------------------------------//
//---------MigrateOpaqueActions--------//
//-------------------------------------//
migrate OpaqueAction {
	migrated.language.add("bash");	
	var occiElement = original.correspondingOCCIElement();
	migrated.body.add(createBody(occiElement));
}
/*Operation: correspondingOCCIElement
Description: Returns corresponding OCCI element of the OpaqueActions ID from the OCCI model.*/
operation inputUML!OpaqueAction correspondingOCCIElement() : OCCI!Entity {
	return OCCI!Entity.all.selectOne(entity | entity.id == self.econtents.first().econtents.first().value);
}

/*Operation: createBody
Description: Creates a curl POST action for the body of the OpaqueAction.*/
operation createBody(occiElement : OCCI!Entity) : String{
	var curl = "curl -v -X POST http://"+ip+"/"+version+"/"+occiElement.kind.term+"/ ";
	curl += "-H 'Category: "+occiElement.kind.term+"; scheme=\""+occiElement.kind.scheme+"\"; class=\"kind\"' ";
	curl += "-H 'Content-Type: text/occi' ";
	curl += "-H 'X-Auth-Token: '"+tokenVar+" ";
	for(mixin in occiElement.mixins) {
		curl += "-H 'Category: "+mixin.term+"; scheme=\""+mixin.scheme+"\"; class=\"mixin\"' ";
	}
	for(attribute in occiElement.attributes){
		curl += "-H 'X-OCCI-Attribute: "+ attribute.name+"=\""+attribute.value+"\"' ";
	}
	return curl;
}