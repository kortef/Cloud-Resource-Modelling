/**
 */
package de.ugoe.cs.as.mspec.model.mapping.provider;

import de.ugoe.cs.as.mspec.model.mapping.util.MappingAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class MappingItemProviderAdapterFactory extends MappingAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public MappingItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.ugoe.cs.as.mspec.model.mapping.TargetParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TargetParameterItemProvider targetParameterItemProvider;

	/**
	 * This creates an adapter for a {@link de.ugoe.cs.as.mspec.model.mapping.TargetParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTargetParameterAdapter() {
		if (targetParameterItemProvider == null) {
			targetParameterItemProvider = new TargetParameterItemProvider(this);
		}

		return targetParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.ugoe.cs.as.mspec.model.mapping.SourceParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SourceParameterItemProvider sourceParameterItemProvider;

	/**
	 * This creates an adapter for a {@link de.ugoe.cs.as.mspec.model.mapping.SourceParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSourceParameterAdapter() {
		if (sourceParameterItemProvider == null) {
			sourceParameterItemProvider = new SourceParameterItemProvider(this);
		}

		return sourceParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.ugoe.cs.as.mspec.model.mapping.UnaryExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnaryExpressionItemProvider unaryExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link de.ugoe.cs.as.mspec.model.mapping.UnaryExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnaryExpressionAdapter() {
		if (unaryExpressionItemProvider == null) {
			unaryExpressionItemProvider = new UnaryExpressionItemProvider(this);
		}

		return unaryExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.ugoe.cs.as.mspec.model.mapping.BinaryExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BinaryExpressionItemProvider binaryExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link de.ugoe.cs.as.mspec.model.mapping.BinaryExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBinaryExpressionAdapter() {
		if (binaryExpressionItemProvider == null) {
			binaryExpressionItemProvider = new BinaryExpressionItemProvider(this);
		}

		return binaryExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.ugoe.cs.as.mspec.model.mapping.Mapping} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MappingItemProvider mappingItemProvider;

	/**
	 * This creates an adapter for a {@link de.ugoe.cs.as.mspec.model.mapping.Mapping}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMappingAdapter() {
		if (mappingItemProvider == null) {
			mappingItemProvider = new MappingItemProvider(this);
		}

		return mappingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.ugoe.cs.as.mspec.model.mapping.MappingModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MappingModelItemProvider mappingModelItemProvider;

	/**
	 * This creates an adapter for a {@link de.ugoe.cs.as.mspec.model.mapping.MappingModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMappingModelAdapter() {
		if (mappingModelItemProvider == null) {
			mappingModelItemProvider = new MappingModelItemProvider(this);
		}

		return mappingModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.ugoe.cs.as.mspec.model.mapping.FileSizeExtractor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FileSizeExtractorItemProvider fileSizeExtractorItemProvider;

	/**
	 * This creates an adapter for a {@link de.ugoe.cs.as.mspec.model.mapping.FileSizeExtractor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFileSizeExtractorAdapter() {
		if (fileSizeExtractorItemProvider == null) {
			fileSizeExtractorItemProvider = new FileSizeExtractorItemProvider(this);
		}

		return fileSizeExtractorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.ugoe.cs.as.mspec.model.mapping.FileContentExtractor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FileContentExtractorItemProvider fileContentExtractorItemProvider;

	/**
	 * This creates an adapter for a {@link de.ugoe.cs.as.mspec.model.mapping.FileContentExtractor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFileContentExtractorAdapter() {
		if (fileContentExtractorItemProvider == null) {
			fileContentExtractorItemProvider = new FileContentExtractorItemProvider(this);
		}

		return fileContentExtractorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.ugoe.cs.as.mspec.model.mapping.FileNumLinesExtractor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FileNumLinesExtractorItemProvider fileNumLinesExtractorItemProvider;

	/**
	 * This creates an adapter for a {@link de.ugoe.cs.as.mspec.model.mapping.FileNumLinesExtractor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFileNumLinesExtractorAdapter() {
		if (fileNumLinesExtractorItemProvider == null) {
			fileNumLinesExtractorItemProvider = new FileNumLinesExtractorItemProvider(this);
		}

		return fileNumLinesExtractorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.ugoe.cs.as.mspec.model.mapping.FolderCountExtractor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FolderCountExtractorItemProvider folderCountExtractorItemProvider;

	/**
	 * This creates an adapter for a {@link de.ugoe.cs.as.mspec.model.mapping.FolderCountExtractor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFolderCountExtractorAdapter() {
		if (folderCountExtractorItemProvider == null) {
			folderCountExtractorItemProvider = new FolderCountExtractorItemProvider(this);
		}

		return folderCountExtractorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.ugoe.cs.as.mspec.model.mapping.FolderSizeExtractor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FolderSizeExtractorItemProvider folderSizeExtractorItemProvider;

	/**
	 * This creates an adapter for a {@link de.ugoe.cs.as.mspec.model.mapping.FolderSizeExtractor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFolderSizeExtractorAdapter() {
		if (folderSizeExtractorItemProvider == null) {
			folderSizeExtractorItemProvider = new FolderSizeExtractorItemProvider(this);
		}

		return folderSizeExtractorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.ugoe.cs.as.mspec.model.mapping.FlavorMapper} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FlavorMapperItemProvider flavorMapperItemProvider;

	/**
	 * This creates an adapter for a {@link de.ugoe.cs.as.mspec.model.mapping.FlavorMapper}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFlavorMapperAdapter() {
		if (flavorMapperItemProvider == null) {
			flavorMapperItemProvider = new FlavorMapperItemProvider(this);
		}

		return flavorMapperItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.ugoe.cs.as.mspec.model.mapping.CoreMapper} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CoreMapperItemProvider coreMapperItemProvider;

	/**
	 * This creates an adapter for a {@link de.ugoe.cs.as.mspec.model.mapping.CoreMapper}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCoreMapperAdapter() {
		if (coreMapperItemProvider == null) {
			coreMapperItemProvider = new CoreMapperItemProvider(this);
		}

		return coreMapperItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (targetParameterItemProvider != null) targetParameterItemProvider.dispose();
		if (sourceParameterItemProvider != null) sourceParameterItemProvider.dispose();
		if (unaryExpressionItemProvider != null) unaryExpressionItemProvider.dispose();
		if (binaryExpressionItemProvider != null) binaryExpressionItemProvider.dispose();
		if (mappingItemProvider != null) mappingItemProvider.dispose();
		if (mappingModelItemProvider != null) mappingModelItemProvider.dispose();
		if (fileSizeExtractorItemProvider != null) fileSizeExtractorItemProvider.dispose();
		if (fileContentExtractorItemProvider != null) fileContentExtractorItemProvider.dispose();
		if (fileNumLinesExtractorItemProvider != null) fileNumLinesExtractorItemProvider.dispose();
		if (folderCountExtractorItemProvider != null) folderCountExtractorItemProvider.dispose();
		if (folderSizeExtractorItemProvider != null) folderSizeExtractorItemProvider.dispose();
		if (flavorMapperItemProvider != null) flavorMapperItemProvider.dispose();
		if (coreMapperItemProvider != null) coreMapperItemProvider.dispose();
	}

}
