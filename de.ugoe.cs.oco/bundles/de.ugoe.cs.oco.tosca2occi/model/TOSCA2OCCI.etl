import "./configuration.etl";
import "./operations/generalOperations.etl";
import "./operations/attributes.etl";
import "./operations/configurations.etl";
import "./operations/kinds.etl";
import "./operations/links.etl";
import "./rules/rules.etl";



pre {
	"Starting ETL".println();
	"Starting Transformation".println();
	"\n".print();

	var targetsToBeAdded = new Map; //Key = Target Resource id; Value = Link;
	var sourcesToBeAdded = new Map; //Key = Sources Resource id; Value = Link;
	var configuration = getTypeMapping();
	var mixinMapping = getMixinMapping();
	
	"Input model stats:".println();
	("#TNodeTemplates to be transformed: " + TOSCA!TNodeTemplate.allOfKind.size).println();
	("#TRelationshipTemplates to be transformed: " + TOSCA!TRelationshipTemplate.allOfKind.size).println();
	
	"".println;
	"OCCI model stats:".println();
	("#Kinds (known): " + OCCIExtensions!occi::Kind.allInstances.size).println();
	("#Extensions (known): " + OCCIExtensions!occi::Extension.allInstances.size).println();
	("#Mixins (known):) " + OCCIExtensions!occi::Mixin.allInstances.size).println();

	var config = createRootConfiguration();
	
	for (extension in OCCIExtensions!occi::Extension.allInstances){
		config.use.add(extension);
	}
	
}
post {
	("#Resources in output model: " + OCCI!occi::Resource.allInstances.size).println();
	("#Links in output model: " + OCCI!occi::Link.allInstances.size).println();
	
	
	// Add top-level application in case there is none
	var applicationKind = OCCI!occi::Kind.allInstances.selectOne(kind | 
		kind.scheme == "http://schemas.modmacao.org/occi/platform#" and kind.title == "Application");
	var linkKind = OCCI!occi::Kind.allInstances.selectOne(kind | 
		kind.scheme == "http://schemas.modmacao.org/occi/platform#" and kind.title == "ComponentLink");
			
	var application = OCCI!occi::Resource.allInstances.selectOne( r | r.kind == applicationKind);
	
	if (application == null){
		application = new OCCI!occi::Resource();
		application.kind = applicationKind;
		application.title = "User application";
		var components = OCCI!occi::Resource.allInstances.select(r | 
			r.kind.scheme == "http://schemas.modmacao.org/occi/platform#" and r.kind.title == "Component");	
		for (component in components){
			var componentLink = new OCCI!occi::Link();
			componentLink.target = component;
			componentLink.kind = linkKind;
			componentLink.title = "application_to_" + component.title;
			application.links.add(componentLink);
		}
		config.resources.add(application);
	} 
	
	
	for (link in targetsToBeAdded.values().flatten()){
		delete link;
	}
	for (link in sourcesToBeAdded.values().flatten()){
		delete link;
	}
}
