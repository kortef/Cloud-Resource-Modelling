/**
 */
package de.ugoe.cs.oco.tosca;

import java.util.Map;
import org.eclipse.emf.common.util.DiagnosticChain;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>TNode Template</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link de.ugoe.cs.oco.tosca.TNodeTemplate#getRequirements <em>Requirements</em>}</li>
 *   <li>{@link de.ugoe.cs.oco.tosca.TNodeTemplate#getCapabilities <em>Capabilities</em>}</li>
 *   <li>{@link de.ugoe.cs.oco.tosca.TNodeTemplate#getPolicies <em>Policies</em>}</li>
 *   <li>{@link de.ugoe.cs.oco.tosca.TNodeTemplate#getDeploymentArtifacts <em>Deployment Artifacts</em>}</li>
 *   <li>{@link de.ugoe.cs.oco.tosca.TNodeTemplate#getMaxInstances <em>Max Instances</em>}</li>
 *   <li>{@link de.ugoe.cs.oco.tosca.TNodeTemplate#getMinInstances <em>Min Instances</em>}</li>
 *   <li>{@link de.ugoe.cs.oco.tosca.TNodeTemplate#getName <em>Name</em>}</li>
 * </ul>
 *
 * @see de.ugoe.cs.oco.tosca.ToscaPackage#getTNodeTemplate()
 * @model extendedMetaData="name='tNodeTemplate' kind='elementOnly'"
 *        annotation="http://www.eclipse.org/emf/2002/Ecore constraints='capabilitiesMustBeDefinedInReferencedNodeType'"
 * @generated
 */
public interface TNodeTemplate extends TEntityTemplate {
	/**
	 * Returns the value of the '<em><b>Requirements</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Requirements</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Requirements</em>' containment reference.
	 * @see #setRequirements(RequirementsType)
	 * @see de.ugoe.cs.oco.tosca.ToscaPackage#getTNodeTemplate_Requirements()
	 * @model containment="true"
	 *        extendedMetaData="kind='element' name='Requirements' namespace='##targetNamespace'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel get='throw new UnsupportedOperationException();  // FIXME Unimplemented http://oco.cs.ugoe.de/tosca!TNodeTemplate!requirements'"
	 * @generated
	 */
	RequirementsType getRequirements();

	/**
	 * Sets the value of the '{@link de.ugoe.cs.oco.tosca.TNodeTemplate#getRequirements <em>Requirements</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Requirements</em>' containment reference.
	 * @see #getRequirements()
	 * @generated
	 */
	void setRequirements(RequirementsType value);

	/**
	 * Returns the value of the '<em><b>Capabilities</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Capabilities</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Capabilities</em>' containment reference.
	 * @see #setCapabilities(CapabilitiesType)
	 * @see de.ugoe.cs.oco.tosca.ToscaPackage#getTNodeTemplate_Capabilities()
	 * @model containment="true"
	 *        extendedMetaData="kind='element' name='Capabilities' namespace='##targetNamespace'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel get='throw new UnsupportedOperationException();  // FIXME Unimplemented http://oco.cs.ugoe.de/tosca!TNodeTemplate!capabilities'"
	 * @generated
	 */
	CapabilitiesType getCapabilities();

	/**
	 * Sets the value of the '{@link de.ugoe.cs.oco.tosca.TNodeTemplate#getCapabilities <em>Capabilities</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Capabilities</em>' containment reference.
	 * @see #getCapabilities()
	 * @generated
	 */
	void setCapabilities(CapabilitiesType value);

	/**
	 * Returns the value of the '<em><b>Policies</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Policies</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Policies</em>' containment reference.
	 * @see #setPolicies(PoliciesType)
	 * @see de.ugoe.cs.oco.tosca.ToscaPackage#getTNodeTemplate_Policies()
	 * @model containment="true"
	 *        extendedMetaData="kind='element' name='Policies' namespace='##targetNamespace'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel get='throw new UnsupportedOperationException();  // FIXME Unimplemented http://oco.cs.ugoe.de/tosca!TNodeTemplate!policies'"
	 * @generated
	 */
	PoliciesType getPolicies();

	/**
	 * Sets the value of the '{@link de.ugoe.cs.oco.tosca.TNodeTemplate#getPolicies <em>Policies</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Policies</em>' containment reference.
	 * @see #getPolicies()
	 * @generated
	 */
	void setPolicies(PoliciesType value);

	/**
	 * Returns the value of the '<em><b>Deployment Artifacts</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Deployment Artifacts</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Deployment Artifacts</em>' containment reference.
	 * @see #setDeploymentArtifacts(TDeploymentArtifacts)
	 * @see de.ugoe.cs.oco.tosca.ToscaPackage#getTNodeTemplate_DeploymentArtifacts()
	 * @model containment="true"
	 *        extendedMetaData="kind='element' name='DeploymentArtifacts' namespace='##targetNamespace'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel get='throw new UnsupportedOperationException();  // FIXME Unimplemented http://oco.cs.ugoe.de/tosca!TNodeTemplate!deploymentArtifacts'"
	 * @generated
	 */
	TDeploymentArtifacts getDeploymentArtifacts();

	/**
	 * Sets the value of the '{@link de.ugoe.cs.oco.tosca.TNodeTemplate#getDeploymentArtifacts <em>Deployment Artifacts</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Deployment Artifacts</em>' containment reference.
	 * @see #getDeploymentArtifacts()
	 * @generated
	 */
	void setDeploymentArtifacts(TDeploymentArtifacts value);

	/**
	 * Returns the value of the '<em><b>Max Instances</b></em>' attribute.
	 * The default value is <code>"1"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Max Instances</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Max Instances</em>' attribute.
	 * @see #isSetMaxInstances()
	 * @see #unsetMaxInstances()
	 * @see #setMaxInstances(Object)
	 * @see de.ugoe.cs.oco.tosca.ToscaPackage#getTNodeTemplate_MaxInstances()
	 * @model default="1" unsettable="true" dataType="de.ugoe.cs.oco.tosca.MaxInstancesType1"
	 *        extendedMetaData="kind='attribute' name='maxInstances'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel get='throw new UnsupportedOperationException();  // FIXME Unimplemented http://oco.cs.ugoe.de/tosca!TNodeTemplate!maxInstances'"
	 * @generated
	 */
	Object getMaxInstances();

	/**
	 * Sets the value of the '{@link de.ugoe.cs.oco.tosca.TNodeTemplate#getMaxInstances <em>Max Instances</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Max Instances</em>' attribute.
	 * @see #isSetMaxInstances()
	 * @see #unsetMaxInstances()
	 * @see #getMaxInstances()
	 * @generated
	 */
	void setMaxInstances(Object value);

	/**
	 * Unsets the value of the '{@link de.ugoe.cs.oco.tosca.TNodeTemplate#getMaxInstances <em>Max Instances</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #isSetMaxInstances()
	 * @see #getMaxInstances()
	 * @see #setMaxInstances(Object)
	 * @generated
	 */
	void unsetMaxInstances();

	/**
	 * Returns whether the value of the '{@link de.ugoe.cs.oco.tosca.TNodeTemplate#getMaxInstances <em>Max Instances</em>}' attribute is set.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return whether the value of the '<em>Max Instances</em>' attribute is set.
	 * @see #unsetMaxInstances()
	 * @see #getMaxInstances()
	 * @see #setMaxInstances(Object)
	 * @generated
	 */
	boolean isSetMaxInstances();

	/**
	 * Returns the value of the '<em><b>Min Instances</b></em>' attribute.
	 * The default value is <code>"1"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Min Instances</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Min Instances</em>' attribute.
	 * @see #isSetMinInstances()
	 * @see #unsetMinInstances()
	 * @see #setMinInstances(int)
	 * @see de.ugoe.cs.oco.tosca.ToscaPackage#getTNodeTemplate_MinInstances()
	 * @model default="1" unsettable="true" dataType="org.eclipse.emf.ecore.xml.type.Int" required="true"
	 *        extendedMetaData="kind='attribute' name='minInstances'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel get='throw new UnsupportedOperationException();  // FIXME Unimplemented http://oco.cs.ugoe.de/tosca!TNodeTemplate!minInstances'"
	 * @generated
	 */
	int getMinInstances();

	/**
	 * Sets the value of the '{@link de.ugoe.cs.oco.tosca.TNodeTemplate#getMinInstances <em>Min Instances</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Min Instances</em>' attribute.
	 * @see #isSetMinInstances()
	 * @see #unsetMinInstances()
	 * @see #getMinInstances()
	 * @generated
	 */
	void setMinInstances(int value);

	/**
	 * Unsets the value of the '{@link de.ugoe.cs.oco.tosca.TNodeTemplate#getMinInstances <em>Min Instances</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #isSetMinInstances()
	 * @see #getMinInstances()
	 * @see #setMinInstances(int)
	 * @generated
	 */
	void unsetMinInstances();

	/**
	 * Returns whether the value of the '{@link de.ugoe.cs.oco.tosca.TNodeTemplate#getMinInstances <em>Min Instances</em>}' attribute is set.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return whether the value of the '<em>Min Instances</em>' attribute is set.
	 * @see #unsetMinInstances()
	 * @see #getMinInstances()
	 * @see #setMinInstances(int)
	 * @generated
	 */
	boolean isSetMinInstances();

	/**
	 * Returns the value of the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Name</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Name</em>' attribute.
	 * @see #setName(String)
	 * @see de.ugoe.cs.oco.tosca.ToscaPackage#getTNodeTemplate_Name()
	 * @model extendedMetaData="kind='attribute' name='name'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel get='throw new UnsupportedOperationException();  // FIXME Unimplemented http://oco.cs.ugoe.de/tosca!TNodeTemplate!name'"
	 * @generated
	 */
	String getName();

	/**
	 * Sets the value of the '{@link de.ugoe.cs.oco.tosca.TNodeTemplate#getName <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Name</em>' attribute.
	 * @see #getName()
	 * @generated
	 */
	void setName(String value);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='/**\n *\n * inv requirementsMustBeDefinedInReferencedNodeType:\n *   let\n *     severity : Integer[1] = \'TNodeTemplate::requirementsMustBeDefinedInReferencedNodeType\'.getSeverity()\n *   in\n *     if severity &lt;= 0\n *     then true\n *     else\n *       let\n *         result : type::Boolean[?] = if\n *           self.typeRef.oclIsKindOf(TNodeType) and self.requirements &lt;&gt; null\n *         then\n *           if\n *             self.requirements.requirement-&gt;forAll(\n *               self.typeRef.oclAsType(TNodeType).requirementDefinitions &lt;&gt; null and\n *               self.typeRef.oclAsType(TNodeType)\n *               .requirementDefinitions.requirementDefinition-&gt;collect(requirementTypeRef)\n *               -&gt;includes(typeRef) or\n *               self.typeRef.oclAsType(TNodeType)\n *               -&gt;closure(\n *                 if derivedFrom &lt;&gt; null\n *                 then derivedFrom.referencedEntityType\n *                 else null\n *                 endif)\n *               -&gt;select(et | et &lt;&gt; null)\n *               -&gt;collect(oclAsType(TNodeType))\n *               -&gt;collect(requirementDefinitions)\n *               -&gt;select(cd | cd &lt;&gt; null)\n *               -&gt;collect(requirementDefinition.requirementTypeRef)\n *               -&gt;includes(typeRef))\n *           then true\n *           else null\n *           endif\n *         else true\n *         endif\n *       in\n *         \'TNodeTemplate::requirementsMustBeDefinedInReferencedNodeType\'.logDiagnostic(self, null, diagnostics, context, null, severity, result, 0)\n *     endif\n \052/\nfinal /*@NonInvalid\052/ &lt;%org.eclipse.ocl.pivot.evaluation.Executor%&gt; executor = &lt;%org.eclipse.ocl.pivot.internal.utilities.PivotUtilInternal%&gt;.getExecutor(this);\nfinal /*@NonInvalid\052/ &lt;%org.eclipse.ocl.pivot.ids.IdResolver%&gt; idResolver = executor.getIdResolver();\nfinal /*@NonInvalid\052/ &lt;%org.eclipse.ocl.pivot.values.IntegerValue%&gt; severity_0 = &lt;%org.eclipse.ocl.pivot.library.string.CGStringGetSeverityOperation%&gt;.INSTANCE.evaluate(executor, &lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.STR_TNodeTemplate_c_c_requirementsMustBeDefinedInReferencedNodeType);\nfinal /*@NonInvalid\052/ boolean le = &lt;%org.eclipse.ocl.pivot.library.oclany.OclComparableLessThanEqualOperation%&gt;.INSTANCE.evaluate(executor, severity_0, &lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.INT_0).booleanValue();\n/*@NonInvalid\052/ boolean symbol_4;\nif (le) {\n\tsymbol_4 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.TRUE_VALUE;\n}\nelse {\n\tfinal /*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.RequirementsType%&gt; requirements = this.getRequirements();\n\t/*@Caught\052/ /*@NonNull\052/ &lt;%java.lang.Object%&gt; CAUGHT_oclIsKindOf;\n\ttry {\n\t\tfinal /*@NonInvalid\052/ &lt;%org.eclipse.ocl.pivot.Class%&gt; TYP_tosca_c_c_TNodeType_0 = idResolver.getClass(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.CLSSid_TNodeType, null);\n\t\tfinal /*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TEntityType%&gt; typeRef = this.getTypeRef();\n\t\tfinal /*@Thrown\052/ boolean oclIsKindOf = &lt;%org.eclipse.ocl.pivot.library.oclany.OclAnyOclIsKindOfOperation%&gt;.INSTANCE.evaluate(executor, typeRef, TYP_tosca_c_c_TNodeType_0).booleanValue();\n\t\tCAUGHT_oclIsKindOf = oclIsKindOf;\n\t}\n\tcatch (&lt;%java.lang.Exception%&gt; e) {\n\t\tCAUGHT_oclIsKindOf = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createInvalidValue(e);\n\t}\n\tfinal /*@NonInvalid\052/ boolean ne = requirements != null;\n\tfinal /*@Thrown\052/ &lt;%java.lang.Boolean%&gt; and = &lt;%org.eclipse.ocl.pivot.library.logical.BooleanAndOperation%&gt;.INSTANCE.evaluate(CAUGHT_oclIsKindOf, ne);\n\tif (and == null) {\n\t\tthrow new &lt;%org.eclipse.ocl.pivot.values.InvalidValueException%&gt;(\"Null if condition\");\n\t}\n\t/*@NonInvalid\052/ &lt;%java.lang.Boolean%&gt; result;\n\tif (and) {\n\t\tif (requirements == null) {\n\t\t\tthrow new &lt;%org.eclipse.ocl.pivot.values.InvalidValueException%&gt;(\"Null source for \\\'\\\'http://oco.cs.ugoe.de/tosca\\\'::RequirementsType::requirement\\\'\");\n\t\t}\n\t\tfinal /*@Thrown\052/ &lt;%java.util.List%&gt;&lt;&lt;%de.ugoe.cs.oco.tosca.TRequirement%&gt;&gt; requirement = requirements.getRequirement();\n\t\tfinal /*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.OrderedSetValue%&gt; BOXED_requirement = idResolver.createOrderedSetOfAll(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.ORD_CLSSid_TRequirement, requirement);\n\t\t/*@Thrown\052/ &lt;%java.lang.Object%&gt; accumulator = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.TRUE_VALUE;\n\t\t/*@NonNull\052/ &lt;%java.util.Iterator%&gt;&lt;&lt;%java.lang.Object%&gt;&gt; ITERATOR__1_5 = BOXED_requirement.iterator();\n\t\t/*@Thrown\052/ &lt;%java.lang.Boolean%&gt; forAll;\n\t\twhile (true) {\n\t\t\tif (!ITERATOR__1_5.hasNext()) {\n\t\t\t\tif (accumulator == null) {\n\t\t\t\t\tforAll = null;\n\t\t\t\t}\n\t\t\t\telse if (accumulator == &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.TRUE_VALUE) {\n\t\t\t\t\tforAll = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.TRUE_VALUE;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow (&lt;%org.eclipse.ocl.pivot.values.InvalidValueException%&gt;)accumulator;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TRequirement%&gt; _1_5 = (&lt;%de.ugoe.cs.oco.tosca.TRequirement%&gt;)ITERATOR__1_5.next();\n\t\t\t/**\n\t\t\t *\n\t\t\t * self.typeRef.oclAsType(TNodeType).requirementDefinitions &lt;&gt; null and\n\t\t\t * self.typeRef.oclAsType(TNodeType)\n\t\t\t * .requirementDefinitions.requirementDefinition-&gt;collect(requirementTypeRef)\n\t\t\t * -&gt;includes(typeRef) or\n\t\t\t * self.typeRef.oclAsType(TNodeType)\n\t\t\t * -&gt;closure(\n\t\t\t *   if derivedFrom &lt;&gt; null\n\t\t\t *   then derivedFrom.referencedEntityType\n\t\t\t *   else null\n\t\t\t *   endif)\n\t\t\t * -&gt;select(et | et &lt;&gt; null)\n\t\t\t * -&gt;collect(oclAsType(TNodeType))\n\t\t\t * -&gt;collect(requirementDefinitions)\n\t\t\t * -&gt;select(cd | cd &lt;&gt; null)\n\t\t\t * -&gt;collect(requirementDefinition.requirementTypeRef)\n\t\t\t * -&gt;includes(typeRef)\n\t\t\t \052/\n\t\t\tfinal /*@NonInvalid\052/ &lt;%org.eclipse.ocl.pivot.StandardLibrary%&gt; standardLibrary = idResolver.getStandardLibrary();\n\t\t\t/*@Caught\052/ /*@Nullable\052/ &lt;%java.lang.Object%&gt; CAUGHT_or;\n\t\t\ttry {\n\t\t\t\t/*@Caught\052/ /*@Nullable\052/ &lt;%java.lang.Object%&gt; CAUGHT_and_0;\n\t\t\t\ttry {\n\t\t\t\t\t/*@Caught\052/ /*@NonNull\052/ &lt;%java.lang.Object%&gt; CAUGHT_ne_0;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfinal /*@NonInvalid\052/ &lt;%org.eclipse.ocl.pivot.Class%&gt; TYP_tosca_c_c_TNodeType_1 = idResolver.getClass(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.CLSSid_TNodeType, null);\n\t\t\t\t\t\tfinal /*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TEntityType%&gt; typeRef_0 = this.getTypeRef();\n\t\t\t\t\t\tfinal /*@Thrown\052/ &lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt; oclAsType = &lt;%org.eclipse.ocl.pivot.utilities.ClassUtil%&gt;.nonNullState((&lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt;)&lt;%org.eclipse.ocl.pivot.library.oclany.OclAnyOclAsTypeOperation%&gt;.INSTANCE.evaluate(executor, typeRef_0, TYP_tosca_c_c_TNodeType_1));\n\t\t\t\t\t\tfinal /*@Thrown\052/ &lt;%de.ugoe.cs.oco.tosca.RequirementDefinitionsType1%&gt; requirementDefinitions = oclAsType.getRequirementDefinitions();\n\t\t\t\t\t\tfinal /*@Thrown\052/ boolean ne_0 = requirementDefinitions != null;\n\t\t\t\t\t\tCAUGHT_ne_0 = ne_0;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (&lt;%java.lang.Exception%&gt; e) {\n\t\t\t\t\t\tCAUGHT_ne_0 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createInvalidValue(e);\n\t\t\t\t\t}\n\t\t\t\t\t/*@Caught\052/ /*@NonNull\052/ &lt;%java.lang.Object%&gt; CAUGHT_includes;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfinal /*@NonInvalid\052/ &lt;%org.eclipse.ocl.pivot.Class%&gt; TYP_tosca_c_c_TNodeType_2 = idResolver.getClass(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.CLSSid_TNodeType, null);\n\t\t\t\t\t\tfinal /*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TEntityType%&gt; typeRef_1 = this.getTypeRef();\n\t\t\t\t\t\tfinal /*@Thrown\052/ &lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt; oclAsType_0 = &lt;%org.eclipse.ocl.pivot.utilities.ClassUtil%&gt;.nonNullState((&lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt;)&lt;%org.eclipse.ocl.pivot.library.oclany.OclAnyOclAsTypeOperation%&gt;.INSTANCE.evaluate(executor, typeRef_1, TYP_tosca_c_c_TNodeType_2));\n\t\t\t\t\t\tfinal /*@Thrown\052/ &lt;%de.ugoe.cs.oco.tosca.RequirementDefinitionsType1%&gt; requirementDefinitions_0 = oclAsType_0.getRequirementDefinitions();\n\t\t\t\t\t\tif (requirementDefinitions_0 == null) {\n\t\t\t\t\t\t\tthrow new &lt;%org.eclipse.ocl.pivot.values.InvalidValueException%&gt;(\"Null source for \\\'\\\'http://oco.cs.ugoe.de/tosca\\\'::RequirementDefinitionsType1::requirementDefinition\\\'\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfinal /*@Thrown\052/ &lt;%java.util.List%&gt;&lt;&lt;%de.ugoe.cs.oco.tosca.TRequirementDefinition%&gt;&gt; requirementDefinition = requirementDefinitions_0.getRequirementDefinition();\n\t\t\t\t\t\tfinal /*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.OrderedSetValue%&gt; BOXED_requirementDefinition = idResolver.createOrderedSetOfAll(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.ORD_CLSSid_TRequirementDefinition, requirementDefinition);\n\t\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.SequenceValue%&gt;.Accumulator accumulator_0 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createSequenceAccumulatorValue(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.SEQ_CLSSid_TRequirementType);\n\t\t\t\t\t\t/*@NonNull\052/ &lt;%java.util.Iterator%&gt;&lt;&lt;%java.lang.Object%&gt;&gt; ITERATOR__1 = BOXED_requirementDefinition.iterator();\n\t\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.SequenceValue%&gt; collect;\n\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\tif (!ITERATOR__1.hasNext()) {\n\t\t\t\t\t\t\t\tcollect = accumulator_0;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TRequirementDefinition%&gt; _1 = (&lt;%de.ugoe.cs.oco.tosca.TRequirementDefinition%&gt;)ITERATOR__1.next();\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * requirementTypeRef\n\t\t\t\t\t\t\t \052/\n\t\t\t\t\t\t\tfinal /*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TRequirementType%&gt; requirementTypeRef = _1.getRequirementTypeRef();\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\taccumulator_0.add(requirementTypeRef);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfinal /*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TEntityType%&gt; typeRef_2 = _1_5.getTypeRef();\n\t\t\t\t\t\tfinal /*@Thrown\052/ boolean includes = &lt;%org.eclipse.ocl.pivot.library.collection.CollectionIncludesOperation%&gt;.INSTANCE.evaluate(collect, typeRef_2).booleanValue();\n\t\t\t\t\t\tCAUGHT_includes = includes;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (&lt;%java.lang.Exception%&gt; e) {\n\t\t\t\t\t\tCAUGHT_includes = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createInvalidValue(e);\n\t\t\t\t\t}\n\t\t\t\t\tfinal /*@Thrown\052/ &lt;%java.lang.Boolean%&gt; and_0 = &lt;%org.eclipse.ocl.pivot.library.logical.BooleanAndOperation%&gt;.INSTANCE.evaluate(CAUGHT_ne_0, CAUGHT_includes);\n\t\t\t\t\tCAUGHT_and_0 = and_0;\n\t\t\t\t}\n\t\t\t\tcatch (&lt;%java.lang.Exception%&gt; e) {\n\t\t\t\t\tCAUGHT_and_0 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createInvalidValue(e);\n\t\t\t\t}\n\t\t\t\t/*@Caught\052/ /*@NonNull\052/ &lt;%java.lang.Object%&gt; CAUGHT_includes_0;\n\t\t\t\ttry {\n\t\t\t\t\tfinal /*@NonInvalid\052/ &lt;%org.eclipse.ocl.pivot.Class%&gt; TYP_tosca_c_c_TNodeType_4 = idResolver.getClass(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.CLSSid_TNodeType, null);\n\t\t\t\t\tfinal /*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TEntityType%&gt; typeRef_3 = this.getTypeRef();\n\t\t\t\t\tfinal /*@Thrown\052/ &lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt; oclAsType_1 = &lt;%org.eclipse.ocl.pivot.utilities.ClassUtil%&gt;.nonNullState((&lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt;)&lt;%org.eclipse.ocl.pivot.library.oclany.OclAnyOclAsTypeOperation%&gt;.INSTANCE.evaluate(executor, typeRef_3, TYP_tosca_c_c_TNodeType_4));\n\t\t\t\t\tfinal /*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.SetValue%&gt; oclAsSet = &lt;%org.eclipse.ocl.pivot.library.oclany.OclAnyOclAsSetOperation%&gt;.INSTANCE.evaluate(executor, &lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.SET_CLSSid_TNodeType, oclAsType_1);\n\t\t\t\t\tfinal &lt;%org.eclipse.ocl.pivot.Class%&gt; TYPE_closure_0 = executor.getStaticTypeOf(oclAsSet);\n\t\t\t\t\tfinal &lt;%org.eclipse.ocl.pivot.library.LibraryIteration%&gt;.LibraryIterationExtension IMPL_closure_0 = (&lt;%org.eclipse.ocl.pivot.library.LibraryIteration%&gt;.LibraryIterationExtension)TYPE_closure_0.lookupImplementation(standardLibrary, &lt;%org.eclipse.ocl.pivot.oclstdlib.OCLstdlibTables%&gt;.Operations._Set__closure);\n\t\t\t\t\tfinal /*@NonNull\052/ Object ACC_closure_0 = IMPL_closure_0.createAccumulatorValue(executor, &lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.SET_CLSSid_TNodeType, &lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.CLSSid_TEntityType);\n\t\t\t\t\t/**\n\t\t\t\t\t * Implementation of the iterator body.\n\t\t\t\t\t \052/\n\t\t\t\t\tfinal /*@NonNull\052/ &lt;%org.eclipse.ocl.pivot.library.AbstractBinaryOperation%&gt; BODY_closure_0 = new &lt;%org.eclipse.ocl.pivot.library.AbstractBinaryOperation%&gt;()\n\t\t\t\t\t{\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * if derivedFrom &lt;&gt; null\n\t\t\t\t\t\t * then derivedFrom.referencedEntityType\n\t\t\t\t\t\t * else null\n\t\t\t\t\t\t * endif\n\t\t\t\t\t\t \052/\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic /*@Nullable\052/ Object evaluate(final /*@NonNull\052/ &lt;%org.eclipse.ocl.pivot.evaluation.Executor%&gt; executor, final /*@NonNull\052/ &lt;%org.eclipse.ocl.pivot.ids.TypeId%&gt; typeId, final /*@Nullable\052/ Object oclAsSet, final /*@NonInvalid\052/ &lt;%java.lang.Object%&gt; _1_0) {\n\t\t\t\t\t\t\tfinal /*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt; symbol_0 = (&lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt;)_1_0;\n\t\t\t\t\t\t\tif (symbol_0 == null) {\n\t\t\t\t\t\t\t\tthrow new &lt;%org.eclipse.ocl.pivot.values.InvalidValueException%&gt;(\"Null source for \\\'\\\'http://oco.cs.ugoe.de/tosca\\\'::TEntityType::derivedFrom\\\'\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfinal /*@Thrown\052/ &lt;%de.ugoe.cs.oco.tosca.DerivedFromType2%&gt; derivedFrom = symbol_0.getDerivedFrom();\n\t\t\t\t\t\t\tfinal /*@Thrown\052/ boolean ne_1 = derivedFrom != null;\n\t\t\t\t\t\t\t/*@Thrown\052/ &lt;%de.ugoe.cs.oco.tosca.TEntityType%&gt; symbol_2;\n\t\t\t\t\t\t\tif (ne_1) {\n\t\t\t\t\t\t\t\tif (derivedFrom == null) {\n\t\t\t\t\t\t\t\t\tthrow new &lt;%org.eclipse.ocl.pivot.values.InvalidValueException%&gt;(\"Null source for \\\'\\\'http://oco.cs.ugoe.de/tosca\\\'::DerivedFromType2::referencedEntityType\\\'\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfinal /*@Thrown\052/ &lt;%de.ugoe.cs.oco.tosca.TEntityType%&gt; referencedEntityType = derivedFrom.getReferencedEntityType();\n\t\t\t\t\t\t\t\tsymbol_2 = referencedEntityType;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tsymbol_2 = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn symbol_2;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tfinal /*@NonNull\052/  &lt;%org.eclipse.ocl.pivot.internal.library.executor.ExecutorSingleIterationManager%&gt; MGR_closure_0 = new &lt;%org.eclipse.ocl.pivot.internal.library.executor.ExecutorSingleIterationManager%&gt;(executor, &lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.SET_CLSSid_TNodeType, BODY_closure_0, oclAsSet, ACC_closure_0);\n\t\t\t\t\tfinal /*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.SetValue%&gt; closure = &lt;%org.eclipse.ocl.pivot.utilities.ClassUtil%&gt;.nonNullState((&lt;%org.eclipse.ocl.pivot.values.SetValue%&gt;)IMPL_closure_0.evaluateIteration(MGR_closure_0));\n\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.SetValue%&gt;.Accumulator accumulator_1 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createSetAccumulatorValue(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.SET_CLSSid_TNodeType);\n\t\t\t\t\t/*@Nullable\052/ &lt;%java.util.Iterator%&gt;&lt;&lt;%java.lang.Object%&gt;&gt; ITERATOR_et = closure.iterator();\n\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.SetValue%&gt; select_0;\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tif (!ITERATOR_et.hasNext()) {\n\t\t\t\t\t\t\tselect_0 = accumulator_1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt; et = (&lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt;)ITERATOR_et.next();\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * et &lt;&gt; null\n\t\t\t\t\t\t \052/\n\t\t\t\t\t\tfinal /*@NonInvalid\052/ boolean ne_2 = et != null;\n\t\t\t\t\t\t//\n\t\t\t\t\t\tif (ne_2 == &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.TRUE_VALUE) {\n\t\t\t\t\t\t\taccumulator_1.add(et);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.BagValue%&gt;.Accumulator accumulator_2 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createBagAccumulatorValue(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.BAG_CLSSid_TNodeType);\n\t\t\t\t\t/*@Nullable\052/ &lt;%java.util.Iterator%&gt;&lt;&lt;%java.lang.Object%&gt;&gt; ITERATOR__1_1 = select_0.iterator();\n\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.BagValue%&gt; collect_2;\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tif (!ITERATOR__1_1.hasNext()) {\n\t\t\t\t\t\t\tcollect_2 = accumulator_2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt; _1_1 = (&lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt;)ITERATOR__1_1.next();\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * oclAsType(TNodeType)\n\t\t\t\t\t\t \052/\n\t\t\t\t\t\tfinal /*@Thrown\052/ &lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt; oclAsType_2 = &lt;%org.eclipse.ocl.pivot.utilities.ClassUtil%&gt;.nonNullState((&lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt;)&lt;%org.eclipse.ocl.pivot.library.oclany.OclAnyOclAsTypeOperation%&gt;.INSTANCE.evaluate(executor, _1_1, TYP_tosca_c_c_TNodeType_4));\n\t\t\t\t\t\t//\n\t\t\t\t\t\taccumulator_2.add(oclAsType_2);\n\t\t\t\t\t}\n\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.BagValue%&gt;.Accumulator accumulator_3 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createBagAccumulatorValue(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.BAG_CLSSid_RequirementDefinitionsType1);\n\t\t\t\t\t/*@NonNull\052/ &lt;%java.util.Iterator%&gt;&lt;&lt;%java.lang.Object%&gt;&gt; ITERATOR__1_2 = collect_2.iterator();\n\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.BagValue%&gt; collect_1;\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tif (!ITERATOR__1_2.hasNext()) {\n\t\t\t\t\t\t\tcollect_1 = accumulator_3;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt; _1_2 = (&lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt;)ITERATOR__1_2.next();\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * requirementDefinitions\n\t\t\t\t\t\t \052/\n\t\t\t\t\t\tfinal /*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.RequirementDefinitionsType1%&gt; requirementDefinitions_1 = _1_2.getRequirementDefinitions();\n\t\t\t\t\t\t//\n\t\t\t\t\t\taccumulator_3.add(requirementDefinitions_1);\n\t\t\t\t\t}\n\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.BagValue%&gt;.Accumulator accumulator_4 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createBagAccumulatorValue(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.BAG_CLSSid_RequirementDefinitionsType1);\n\t\t\t\t\t/*@Nullable\052/ &lt;%java.util.Iterator%&gt;&lt;&lt;%java.lang.Object%&gt;&gt; ITERATOR_cd = collect_1.iterator();\n\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.BagValue%&gt; select;\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tif (!ITERATOR_cd.hasNext()) {\n\t\t\t\t\t\t\tselect = accumulator_4;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.RequirementDefinitionsType1%&gt; cd = (&lt;%de.ugoe.cs.oco.tosca.RequirementDefinitionsType1%&gt;)ITERATOR_cd.next();\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * cd &lt;&gt; null\n\t\t\t\t\t\t \052/\n\t\t\t\t\t\tfinal /*@NonInvalid\052/ boolean ne_3 = cd != null;\n\t\t\t\t\t\t//\n\t\t\t\t\t\tif (ne_3 == &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.TRUE_VALUE) {\n\t\t\t\t\t\t\taccumulator_4.add(cd);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.BagValue%&gt;.Accumulator accumulator_5 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createBagAccumulatorValue(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.BAG_CLSSid_TRequirementType);\n\t\t\t\t\t/*@Nullable\052/ &lt;%java.util.Iterator%&gt;&lt;&lt;%java.lang.Object%&gt;&gt; ITERATOR__1_4 = select.iterator();\n\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.BagValue%&gt; collect_0;\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tif (!ITERATOR__1_4.hasNext()) {\n\t\t\t\t\t\t\tcollect_0 = accumulator_5;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.RequirementDefinitionsType1%&gt; _1_4 = (&lt;%de.ugoe.cs.oco.tosca.RequirementDefinitionsType1%&gt;)ITERATOR__1_4.next();\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * requirementDefinition.requirementTypeRef\n\t\t\t\t\t\t \052/\n\t\t\t\t\t\tif (_1_4 == null) {\n\t\t\t\t\t\t\tthrow new &lt;%org.eclipse.ocl.pivot.values.InvalidValueException%&gt;(\"Null source for \\\'\\\'http://oco.cs.ugoe.de/tosca\\\'::RequirementDefinitionsType1::requirementDefinition\\\'\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfinal /*@Thrown\052/ &lt;%java.util.List%&gt;&lt;&lt;%de.ugoe.cs.oco.tosca.TRequirementDefinition%&gt;&gt; requirementDefinition_0 = _1_4.getRequirementDefinition();\n\t\t\t\t\t\tfinal /*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.OrderedSetValue%&gt; BOXED_requirementDefinition_0 = idResolver.createOrderedSetOfAll(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.ORD_CLSSid_TRequirementDefinition, requirementDefinition_0);\n\t\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.SequenceValue%&gt;.Accumulator accumulator_6 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createSequenceAccumulatorValue(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.SEQ_CLSSid_TRequirementType);\n\t\t\t\t\t\t/*@NonNull\052/ &lt;%java.util.Iterator%&gt;&lt;&lt;%java.lang.Object%&gt;&gt; ITERATOR__1_3 = BOXED_requirementDefinition_0.iterator();\n\t\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.SequenceValue%&gt; collect_3;\n\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\tif (!ITERATOR__1_3.hasNext()) {\n\t\t\t\t\t\t\t\tcollect_3 = accumulator_6;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TRequirementDefinition%&gt; _1_3 = (&lt;%de.ugoe.cs.oco.tosca.TRequirementDefinition%&gt;)ITERATOR__1_3.next();\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * requirementTypeRef\n\t\t\t\t\t\t\t \052/\n\t\t\t\t\t\t\tfinal /*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TRequirementType%&gt; requirementTypeRef_0 = _1_3.getRequirementTypeRef();\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\taccumulator_6.add(requirementTypeRef_0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//\n\t\t\t\t\t\tfor (Object value : collect_3.flatten().getElements()) {\n\t\t\t\t\t\t\taccumulator_5.add(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfinal /*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TEntityType%&gt; typeRef_4 = _1_5.getTypeRef();\n\t\t\t\t\tfinal /*@Thrown\052/ boolean includes_0 = &lt;%org.eclipse.ocl.pivot.library.collection.CollectionIncludesOperation%&gt;.INSTANCE.evaluate(collect_0, typeRef_4).booleanValue();\n\t\t\t\t\tCAUGHT_includes_0 = includes_0;\n\t\t\t\t}\n\t\t\t\tcatch (&lt;%java.lang.Exception%&gt; e) {\n\t\t\t\t\tCAUGHT_includes_0 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createInvalidValue(e);\n\t\t\t\t}\n\t\t\t\tfinal /*@Thrown\052/ &lt;%java.lang.Boolean%&gt; or = &lt;%org.eclipse.ocl.pivot.library.logical.BooleanOrOperation%&gt;.INSTANCE.evaluate(CAUGHT_and_0, CAUGHT_includes_0);\n\t\t\t\tCAUGHT_or = or;\n\t\t\t}\n\t\t\tcatch (&lt;%java.lang.Exception%&gt; e) {\n\t\t\t\tCAUGHT_or = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createInvalidValue(e);\n\t\t\t}\n\t\t\t//\n\t\t\tif (CAUGHT_or == &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.FALSE_VALUE) {\t\t\t\t\t// Normal unsuccessful body evaluation result\n\t\t\t\tforAll = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.FALSE_VALUE;\n\t\t\t\tbreak;\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Stop immediately\n\t\t\t}\n\t\t\telse if (CAUGHT_or == &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.TRUE_VALUE) {\t\t\t\t// Normal successful body evaluation result\n\t\t\t\t;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Carry on\n\t\t\t}\n\t\t\telse if (CAUGHT_or == null) {\t\t\t\t\t\t\t\t// Abnormal null body evaluation result\n\t\t\t\tif (accumulator == &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.TRUE_VALUE) {\n\t\t\t\t\taccumulator = null;\t\t\t\t\t\t\t\t\t\t// Cache a null failure\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (CAUGHT_or instanceof &lt;%org.eclipse.ocl.pivot.values.InvalidValueException%&gt;) {\t\t// Abnormal exception evaluation result\n\t\t\t\taccumulator = CAUGHT_or;\t\t\t\t\t\t\t\t\t// Cache an exception failure\n\t\t\t}\n\t\t\telse {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Impossible badly typed result\n\t\t\t\taccumulator = new &lt;%org.eclipse.ocl.pivot.values.InvalidValueException%&gt;(&lt;%org.eclipse.ocl.pivot.messages.PivotMessages%&gt;.NonBooleanBody, \"forAll\");\n\t\t\t}\n\t\t}\n\t\tif (forAll == null) {\n\t\t\tthrow new &lt;%org.eclipse.ocl.pivot.values.InvalidValueException%&gt;(\"Null if condition\");\n\t\t}\n\t\t/*@NonInvalid\052/ &lt;%java.lang.Boolean%&gt; symbol_3;\n\t\tif (forAll) {\n\t\t\tsymbol_3 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.TRUE_VALUE;\n\t\t}\n\t\telse {\n\t\t\tsymbol_3 = null;\n\t\t}\n\t\tresult = symbol_3;\n\t}\n\telse {\n\t\tresult = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.TRUE_VALUE;\n\t}\n\tfinal /*@NonInvalid\052/ boolean logDiagnostic = &lt;%org.eclipse.ocl.pivot.library.string.CGStringLogDiagnosticOperation%&gt;.INSTANCE.evaluate(executor, &lt;%org.eclipse.ocl.pivot.ids.TypeId%&gt;.BOOLEAN, &lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.STR_TNodeTemplate_c_c_requirementsMustBeDefinedInReferencedNodeType, this, (Object)null, diagnostics, context, (Object)null, severity_0, result, &lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.INT_0).booleanValue();\n\tsymbol_4 = logDiagnostic;\n}\nreturn Boolean.TRUE == symbol_4;'"
	 * @generated
	 */
	boolean requirementsMustBeDefinedInReferencedNodeType(DiagnosticChain diagnostics, Map<Object, Object> context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='/**\n *\n * inv typeMustBeNodeType:\n *   let\n *     severity : Integer[1] = \'TNodeTemplate::typeMustBeNodeType\'.getSeverity()\n *   in\n *     if severity &lt;= 0\n *     then true\n *     else\n *       let\n *         result : type::Boolean[1] = self.typeRef.oclIsKindOf(TNodeType)\n *       in\n *         \'TNodeTemplate::typeMustBeNodeType\'.logDiagnostic(self, null, diagnostics, context, null, severity, result, 0)\n *     endif\n \052/\nfinal /*@NonInvalid\052/ &lt;%org.eclipse.ocl.pivot.evaluation.Executor%&gt; executor = &lt;%org.eclipse.ocl.pivot.internal.utilities.PivotUtilInternal%&gt;.getExecutor(this);\nfinal /*@NonInvalid\052/ &lt;%org.eclipse.ocl.pivot.ids.IdResolver%&gt; idResolver = executor.getIdResolver();\nfinal /*@NonInvalid\052/ &lt;%org.eclipse.ocl.pivot.values.IntegerValue%&gt; severity_0 = &lt;%org.eclipse.ocl.pivot.library.string.CGStringGetSeverityOperation%&gt;.INSTANCE.evaluate(executor, &lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.STR_TNodeTemplate_c_c_typeMustBeNodeType);\nfinal /*@NonInvalid\052/ boolean le = &lt;%org.eclipse.ocl.pivot.library.oclany.OclComparableLessThanEqualOperation%&gt;.INSTANCE.evaluate(executor, severity_0, &lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.INT_0).booleanValue();\n/*@NonInvalid\052/ boolean symbol_0;\nif (le) {\n\tsymbol_0 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.TRUE_VALUE;\n}\nelse {\n\t/*@Caught\052/ /*@NonNull\052/ &lt;%java.lang.Object%&gt; CAUGHT_result;\n\ttry {\n\t\tfinal /*@NonInvalid\052/ &lt;%org.eclipse.ocl.pivot.Class%&gt; TYP_tosca_c_c_TNodeType = idResolver.getClass(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.CLSSid_TNodeType, null);\n\t\tfinal /*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TEntityType%&gt; typeRef = this.getTypeRef();\n\t\tfinal /*@Thrown\052/ boolean result = &lt;%org.eclipse.ocl.pivot.library.oclany.OclAnyOclIsKindOfOperation%&gt;.INSTANCE.evaluate(executor, typeRef, TYP_tosca_c_c_TNodeType).booleanValue();\n\t\tCAUGHT_result = result;\n\t}\n\tcatch (&lt;%java.lang.Exception%&gt; e) {\n\t\tCAUGHT_result = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createInvalidValue(e);\n\t}\n\tfinal /*@NonInvalid\052/ boolean logDiagnostic = &lt;%org.eclipse.ocl.pivot.library.string.CGStringLogDiagnosticOperation%&gt;.INSTANCE.evaluate(executor, &lt;%org.eclipse.ocl.pivot.ids.TypeId%&gt;.BOOLEAN, &lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.STR_TNodeTemplate_c_c_typeMustBeNodeType, this, (Object)null, diagnostics, context, (Object)null, severity_0, CAUGHT_result, &lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.INT_0).booleanValue();\n\tsymbol_0 = logDiagnostic;\n}\nreturn Boolean.TRUE == symbol_0;'"
	 * @generated
	 */
	boolean typeMustBeNodeType(DiagnosticChain diagnostics, Map<Object, Object> context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='/**\n *\n * inv capabilitiesMustBeDefinedInReferencedNodeType:\n *   let\n *     severity : Integer[1] = \'TNodeTemplate::capabilitiesMustBeDefinedInReferencedNodeType\'.getSeverity()\n *   in\n *     if severity &lt;= 0\n *     then true\n *     else\n *       let\n *         result : type::Boolean[?] = if\n *           self.typeRef.oclIsKindOf(TNodeType) and self.capabilities &lt;&gt; null\n *         then\n *           if\n *             self.capabilities.capability-&gt;forAll(\n *               self.typeRef.oclAsType(TNodeType).capabilityDefinitions &lt;&gt; null and\n *               self.typeRef.oclAsType(TNodeType)\n *               .capabilityDefinitions.capabilityDefinition-&gt;collect(capabilityTypeRef)\n *               -&gt;includes(typeRef) or\n *               self.typeRef.oclAsType(TNodeType)\n *               -&gt;closure(\n *                 if derivedFrom &lt;&gt; null\n *                 then derivedFrom.referencedEntityType\n *                 else null\n *                 endif)\n *               -&gt;select(et | et &lt;&gt; null)\n *               -&gt;collect(oclAsType(TNodeType))\n *               -&gt;collect(capabilityDefinitions)\n *               -&gt;select(cd | cd &lt;&gt; null)\n *               -&gt;collect(capabilityDefinition.capabilityTypeRef)\n *               -&gt;includes(typeRef))\n *           then true\n *           else null\n *           endif\n *         else true\n *         endif\n *       in\n *         \'TNodeTemplate::capabilitiesMustBeDefinedInReferencedNodeType\'.logDiagnostic(self, null, diagnostics, context, null, severity, result, 0)\n *     endif\n \052/\nfinal /*@NonInvalid\052/ &lt;%org.eclipse.ocl.pivot.evaluation.Executor%&gt; executor = &lt;%org.eclipse.ocl.pivot.internal.utilities.PivotUtilInternal%&gt;.getExecutor(this);\nfinal /*@NonInvalid\052/ &lt;%org.eclipse.ocl.pivot.ids.IdResolver%&gt; idResolver = executor.getIdResolver();\nfinal /*@NonInvalid\052/ &lt;%org.eclipse.ocl.pivot.values.IntegerValue%&gt; severity_0 = &lt;%org.eclipse.ocl.pivot.library.string.CGStringGetSeverityOperation%&gt;.INSTANCE.evaluate(executor, &lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.STR_TNodeTemplate_c_c_capabilitiesMustBeDefinedInReferencedNodeType);\nfinal /*@NonInvalid\052/ boolean le = &lt;%org.eclipse.ocl.pivot.library.oclany.OclComparableLessThanEqualOperation%&gt;.INSTANCE.evaluate(executor, severity_0, &lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.INT_0).booleanValue();\n/*@NonInvalid\052/ boolean symbol_4;\nif (le) {\n\tsymbol_4 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.TRUE_VALUE;\n}\nelse {\n\tfinal /*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.CapabilitiesType%&gt; capabilities = this.getCapabilities();\n\t/*@Caught\052/ /*@NonNull\052/ &lt;%java.lang.Object%&gt; CAUGHT_oclIsKindOf;\n\ttry {\n\t\tfinal /*@NonInvalid\052/ &lt;%org.eclipse.ocl.pivot.Class%&gt; TYP_tosca_c_c_TNodeType_0 = idResolver.getClass(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.CLSSid_TNodeType, null);\n\t\tfinal /*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TEntityType%&gt; typeRef = this.getTypeRef();\n\t\tfinal /*@Thrown\052/ boolean oclIsKindOf = &lt;%org.eclipse.ocl.pivot.library.oclany.OclAnyOclIsKindOfOperation%&gt;.INSTANCE.evaluate(executor, typeRef, TYP_tosca_c_c_TNodeType_0).booleanValue();\n\t\tCAUGHT_oclIsKindOf = oclIsKindOf;\n\t}\n\tcatch (&lt;%java.lang.Exception%&gt; e) {\n\t\tCAUGHT_oclIsKindOf = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createInvalidValue(e);\n\t}\n\tfinal /*@NonInvalid\052/ boolean ne = capabilities != null;\n\tfinal /*@Thrown\052/ &lt;%java.lang.Boolean%&gt; and = &lt;%org.eclipse.ocl.pivot.library.logical.BooleanAndOperation%&gt;.INSTANCE.evaluate(CAUGHT_oclIsKindOf, ne);\n\tif (and == null) {\n\t\tthrow new &lt;%org.eclipse.ocl.pivot.values.InvalidValueException%&gt;(\"Null if condition\");\n\t}\n\t/*@NonInvalid\052/ &lt;%java.lang.Boolean%&gt; result;\n\tif (and) {\n\t\tif (capabilities == null) {\n\t\t\tthrow new &lt;%org.eclipse.ocl.pivot.values.InvalidValueException%&gt;(\"Null source for \\\'\\\'http://oco.cs.ugoe.de/tosca\\\'::CapabilitiesType::capability\\\'\");\n\t\t}\n\t\tfinal /*@Thrown\052/ &lt;%java.util.List%&gt;&lt;&lt;%de.ugoe.cs.oco.tosca.TCapability%&gt;&gt; capability = capabilities.getCapability();\n\t\tfinal /*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.OrderedSetValue%&gt; BOXED_capability = idResolver.createOrderedSetOfAll(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.ORD_CLSSid_TCapability, capability);\n\t\t/*@Thrown\052/ &lt;%java.lang.Object%&gt; accumulator = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.TRUE_VALUE;\n\t\t/*@NonNull\052/ &lt;%java.util.Iterator%&gt;&lt;&lt;%java.lang.Object%&gt;&gt; ITERATOR__1_5 = BOXED_capability.iterator();\n\t\t/*@Thrown\052/ &lt;%java.lang.Boolean%&gt; forAll;\n\t\twhile (true) {\n\t\t\tif (!ITERATOR__1_5.hasNext()) {\n\t\t\t\tif (accumulator == null) {\n\t\t\t\t\tforAll = null;\n\t\t\t\t}\n\t\t\t\telse if (accumulator == &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.TRUE_VALUE) {\n\t\t\t\t\tforAll = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.TRUE_VALUE;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow (&lt;%org.eclipse.ocl.pivot.values.InvalidValueException%&gt;)accumulator;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TCapability%&gt; _1_5 = (&lt;%de.ugoe.cs.oco.tosca.TCapability%&gt;)ITERATOR__1_5.next();\n\t\t\t/**\n\t\t\t *\n\t\t\t * self.typeRef.oclAsType(TNodeType).capabilityDefinitions &lt;&gt; null and\n\t\t\t * self.typeRef.oclAsType(TNodeType)\n\t\t\t * .capabilityDefinitions.capabilityDefinition-&gt;collect(capabilityTypeRef)\n\t\t\t * -&gt;includes(typeRef) or\n\t\t\t * self.typeRef.oclAsType(TNodeType)\n\t\t\t * -&gt;closure(\n\t\t\t *   if derivedFrom &lt;&gt; null\n\t\t\t *   then derivedFrom.referencedEntityType\n\t\t\t *   else null\n\t\t\t *   endif)\n\t\t\t * -&gt;select(et | et &lt;&gt; null)\n\t\t\t * -&gt;collect(oclAsType(TNodeType))\n\t\t\t * -&gt;collect(capabilityDefinitions)\n\t\t\t * -&gt;select(cd | cd &lt;&gt; null)\n\t\t\t * -&gt;collect(capabilityDefinition.capabilityTypeRef)\n\t\t\t * -&gt;includes(typeRef)\n\t\t\t \052/\n\t\t\tfinal /*@NonInvalid\052/ &lt;%org.eclipse.ocl.pivot.StandardLibrary%&gt; standardLibrary = idResolver.getStandardLibrary();\n\t\t\t/*@Caught\052/ /*@Nullable\052/ &lt;%java.lang.Object%&gt; CAUGHT_or;\n\t\t\ttry {\n\t\t\t\t/*@Caught\052/ /*@Nullable\052/ &lt;%java.lang.Object%&gt; CAUGHT_and_0;\n\t\t\t\ttry {\n\t\t\t\t\t/*@Caught\052/ /*@NonNull\052/ &lt;%java.lang.Object%&gt; CAUGHT_ne_0;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfinal /*@NonInvalid\052/ &lt;%org.eclipse.ocl.pivot.Class%&gt; TYP_tosca_c_c_TNodeType_1 = idResolver.getClass(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.CLSSid_TNodeType, null);\n\t\t\t\t\t\tfinal /*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TEntityType%&gt; typeRef_0 = this.getTypeRef();\n\t\t\t\t\t\tfinal /*@Thrown\052/ &lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt; oclAsType = &lt;%org.eclipse.ocl.pivot.utilities.ClassUtil%&gt;.nonNullState((&lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt;)&lt;%org.eclipse.ocl.pivot.library.oclany.OclAnyOclAsTypeOperation%&gt;.INSTANCE.evaluate(executor, typeRef_0, TYP_tosca_c_c_TNodeType_1));\n\t\t\t\t\t\tfinal /*@Thrown\052/ &lt;%de.ugoe.cs.oco.tosca.CapabilityDefinitionsType1%&gt; capabilityDefinitions = oclAsType.getCapabilityDefinitions();\n\t\t\t\t\t\tfinal /*@Thrown\052/ boolean ne_0 = capabilityDefinitions != null;\n\t\t\t\t\t\tCAUGHT_ne_0 = ne_0;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (&lt;%java.lang.Exception%&gt; e) {\n\t\t\t\t\t\tCAUGHT_ne_0 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createInvalidValue(e);\n\t\t\t\t\t}\n\t\t\t\t\t/*@Caught\052/ /*@NonNull\052/ &lt;%java.lang.Object%&gt; CAUGHT_includes;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfinal /*@NonInvalid\052/ &lt;%org.eclipse.ocl.pivot.Class%&gt; TYP_tosca_c_c_TNodeType_2 = idResolver.getClass(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.CLSSid_TNodeType, null);\n\t\t\t\t\t\tfinal /*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TEntityType%&gt; typeRef_1 = this.getTypeRef();\n\t\t\t\t\t\tfinal /*@Thrown\052/ &lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt; oclAsType_0 = &lt;%org.eclipse.ocl.pivot.utilities.ClassUtil%&gt;.nonNullState((&lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt;)&lt;%org.eclipse.ocl.pivot.library.oclany.OclAnyOclAsTypeOperation%&gt;.INSTANCE.evaluate(executor, typeRef_1, TYP_tosca_c_c_TNodeType_2));\n\t\t\t\t\t\tfinal /*@Thrown\052/ &lt;%de.ugoe.cs.oco.tosca.CapabilityDefinitionsType1%&gt; capabilityDefinitions_0 = oclAsType_0.getCapabilityDefinitions();\n\t\t\t\t\t\tif (capabilityDefinitions_0 == null) {\n\t\t\t\t\t\t\tthrow new &lt;%org.eclipse.ocl.pivot.values.InvalidValueException%&gt;(\"Null source for \\\'\\\'http://oco.cs.ugoe.de/tosca\\\'::CapabilityDefinitionsType1::capabilityDefinition\\\'\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfinal /*@Thrown\052/ &lt;%java.util.List%&gt;&lt;&lt;%de.ugoe.cs.oco.tosca.TCapabilityDefinition%&gt;&gt; capabilityDefinition = capabilityDefinitions_0.getCapabilityDefinition();\n\t\t\t\t\t\tfinal /*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.OrderedSetValue%&gt; BOXED_capabilityDefinition = idResolver.createOrderedSetOfAll(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.ORD_CLSSid_TCapabilityDefinition, capabilityDefinition);\n\t\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.SequenceValue%&gt;.Accumulator accumulator_0 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createSequenceAccumulatorValue(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.SEQ_CLSSid_TCapabilityType);\n\t\t\t\t\t\t/*@NonNull\052/ &lt;%java.util.Iterator%&gt;&lt;&lt;%java.lang.Object%&gt;&gt; ITERATOR__1 = BOXED_capabilityDefinition.iterator();\n\t\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.SequenceValue%&gt; collect;\n\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\tif (!ITERATOR__1.hasNext()) {\n\t\t\t\t\t\t\t\tcollect = accumulator_0;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TCapabilityDefinition%&gt; _1 = (&lt;%de.ugoe.cs.oco.tosca.TCapabilityDefinition%&gt;)ITERATOR__1.next();\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * capabilityTypeRef\n\t\t\t\t\t\t\t \052/\n\t\t\t\t\t\t\tfinal /*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TCapabilityType%&gt; capabilityTypeRef = _1.getCapabilityTypeRef();\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\taccumulator_0.add(capabilityTypeRef);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfinal /*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TEntityType%&gt; typeRef_2 = _1_5.getTypeRef();\n\t\t\t\t\t\tfinal /*@Thrown\052/ boolean includes = &lt;%org.eclipse.ocl.pivot.library.collection.CollectionIncludesOperation%&gt;.INSTANCE.evaluate(collect, typeRef_2).booleanValue();\n\t\t\t\t\t\tCAUGHT_includes = includes;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (&lt;%java.lang.Exception%&gt; e) {\n\t\t\t\t\t\tCAUGHT_includes = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createInvalidValue(e);\n\t\t\t\t\t}\n\t\t\t\t\tfinal /*@Thrown\052/ &lt;%java.lang.Boolean%&gt; and_0 = &lt;%org.eclipse.ocl.pivot.library.logical.BooleanAndOperation%&gt;.INSTANCE.evaluate(CAUGHT_ne_0, CAUGHT_includes);\n\t\t\t\t\tCAUGHT_and_0 = and_0;\n\t\t\t\t}\n\t\t\t\tcatch (&lt;%java.lang.Exception%&gt; e) {\n\t\t\t\t\tCAUGHT_and_0 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createInvalidValue(e);\n\t\t\t\t}\n\t\t\t\t/*@Caught\052/ /*@NonNull\052/ &lt;%java.lang.Object%&gt; CAUGHT_includes_0;\n\t\t\t\ttry {\n\t\t\t\t\tfinal /*@NonInvalid\052/ &lt;%org.eclipse.ocl.pivot.Class%&gt; TYP_tosca_c_c_TNodeType_4 = idResolver.getClass(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.CLSSid_TNodeType, null);\n\t\t\t\t\tfinal /*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TEntityType%&gt; typeRef_3 = this.getTypeRef();\n\t\t\t\t\tfinal /*@Thrown\052/ &lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt; oclAsType_1 = &lt;%org.eclipse.ocl.pivot.utilities.ClassUtil%&gt;.nonNullState((&lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt;)&lt;%org.eclipse.ocl.pivot.library.oclany.OclAnyOclAsTypeOperation%&gt;.INSTANCE.evaluate(executor, typeRef_3, TYP_tosca_c_c_TNodeType_4));\n\t\t\t\t\tfinal /*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.SetValue%&gt; oclAsSet = &lt;%org.eclipse.ocl.pivot.library.oclany.OclAnyOclAsSetOperation%&gt;.INSTANCE.evaluate(executor, &lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.SET_CLSSid_TNodeType, oclAsType_1);\n\t\t\t\t\tfinal &lt;%org.eclipse.ocl.pivot.Class%&gt; TYPE_closure_0 = executor.getStaticTypeOf(oclAsSet);\n\t\t\t\t\tfinal &lt;%org.eclipse.ocl.pivot.library.LibraryIteration%&gt;.LibraryIterationExtension IMPL_closure_0 = (&lt;%org.eclipse.ocl.pivot.library.LibraryIteration%&gt;.LibraryIterationExtension)TYPE_closure_0.lookupImplementation(standardLibrary, &lt;%org.eclipse.ocl.pivot.oclstdlib.OCLstdlibTables%&gt;.Operations._Set__closure);\n\t\t\t\t\tfinal /*@NonNull\052/ Object ACC_closure_0 = IMPL_closure_0.createAccumulatorValue(executor, &lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.SET_CLSSid_TNodeType, &lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.CLSSid_TEntityType);\n\t\t\t\t\t/**\n\t\t\t\t\t * Implementation of the iterator body.\n\t\t\t\t\t \052/\n\t\t\t\t\tfinal /*@NonNull\052/ &lt;%org.eclipse.ocl.pivot.library.AbstractBinaryOperation%&gt; BODY_closure_0 = new &lt;%org.eclipse.ocl.pivot.library.AbstractBinaryOperation%&gt;()\n\t\t\t\t\t{\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * if derivedFrom &lt;&gt; null\n\t\t\t\t\t\t * then derivedFrom.referencedEntityType\n\t\t\t\t\t\t * else null\n\t\t\t\t\t\t * endif\n\t\t\t\t\t\t \052/\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic /*@Nullable\052/ Object evaluate(final /*@NonNull\052/ &lt;%org.eclipse.ocl.pivot.evaluation.Executor%&gt; executor, final /*@NonNull\052/ &lt;%org.eclipse.ocl.pivot.ids.TypeId%&gt; typeId, final /*@Nullable\052/ Object oclAsSet, final /*@NonInvalid\052/ &lt;%java.lang.Object%&gt; _1_0) {\n\t\t\t\t\t\t\tfinal /*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt; symbol_0 = (&lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt;)_1_0;\n\t\t\t\t\t\t\tif (symbol_0 == null) {\n\t\t\t\t\t\t\t\tthrow new &lt;%org.eclipse.ocl.pivot.values.InvalidValueException%&gt;(\"Null source for \\\'\\\'http://oco.cs.ugoe.de/tosca\\\'::TEntityType::derivedFrom\\\'\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfinal /*@Thrown\052/ &lt;%de.ugoe.cs.oco.tosca.DerivedFromType2%&gt; derivedFrom = symbol_0.getDerivedFrom();\n\t\t\t\t\t\t\tfinal /*@Thrown\052/ boolean ne_1 = derivedFrom != null;\n\t\t\t\t\t\t\t/*@Thrown\052/ &lt;%de.ugoe.cs.oco.tosca.TEntityType%&gt; symbol_2;\n\t\t\t\t\t\t\tif (ne_1) {\n\t\t\t\t\t\t\t\tif (derivedFrom == null) {\n\t\t\t\t\t\t\t\t\tthrow new &lt;%org.eclipse.ocl.pivot.values.InvalidValueException%&gt;(\"Null source for \\\'\\\'http://oco.cs.ugoe.de/tosca\\\'::DerivedFromType2::referencedEntityType\\\'\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfinal /*@Thrown\052/ &lt;%de.ugoe.cs.oco.tosca.TEntityType%&gt; referencedEntityType = derivedFrom.getReferencedEntityType();\n\t\t\t\t\t\t\t\tsymbol_2 = referencedEntityType;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tsymbol_2 = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn symbol_2;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tfinal /*@NonNull\052/  &lt;%org.eclipse.ocl.pivot.internal.library.executor.ExecutorSingleIterationManager%&gt; MGR_closure_0 = new &lt;%org.eclipse.ocl.pivot.internal.library.executor.ExecutorSingleIterationManager%&gt;(executor, &lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.SET_CLSSid_TNodeType, BODY_closure_0, oclAsSet, ACC_closure_0);\n\t\t\t\t\tfinal /*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.SetValue%&gt; closure = &lt;%org.eclipse.ocl.pivot.utilities.ClassUtil%&gt;.nonNullState((&lt;%org.eclipse.ocl.pivot.values.SetValue%&gt;)IMPL_closure_0.evaluateIteration(MGR_closure_0));\n\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.SetValue%&gt;.Accumulator accumulator_1 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createSetAccumulatorValue(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.SET_CLSSid_TNodeType);\n\t\t\t\t\t/*@Nullable\052/ &lt;%java.util.Iterator%&gt;&lt;&lt;%java.lang.Object%&gt;&gt; ITERATOR_et = closure.iterator();\n\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.SetValue%&gt; select_0;\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tif (!ITERATOR_et.hasNext()) {\n\t\t\t\t\t\t\tselect_0 = accumulator_1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt; et = (&lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt;)ITERATOR_et.next();\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * et &lt;&gt; null\n\t\t\t\t\t\t \052/\n\t\t\t\t\t\tfinal /*@NonInvalid\052/ boolean ne_2 = et != null;\n\t\t\t\t\t\t//\n\t\t\t\t\t\tif (ne_2 == &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.TRUE_VALUE) {\n\t\t\t\t\t\t\taccumulator_1.add(et);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.BagValue%&gt;.Accumulator accumulator_2 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createBagAccumulatorValue(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.BAG_CLSSid_TNodeType);\n\t\t\t\t\t/*@Nullable\052/ &lt;%java.util.Iterator%&gt;&lt;&lt;%java.lang.Object%&gt;&gt; ITERATOR__1_1 = select_0.iterator();\n\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.BagValue%&gt; collect_2;\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tif (!ITERATOR__1_1.hasNext()) {\n\t\t\t\t\t\t\tcollect_2 = accumulator_2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt; _1_1 = (&lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt;)ITERATOR__1_1.next();\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * oclAsType(TNodeType)\n\t\t\t\t\t\t \052/\n\t\t\t\t\t\tfinal /*@Thrown\052/ &lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt; oclAsType_2 = &lt;%org.eclipse.ocl.pivot.utilities.ClassUtil%&gt;.nonNullState((&lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt;)&lt;%org.eclipse.ocl.pivot.library.oclany.OclAnyOclAsTypeOperation%&gt;.INSTANCE.evaluate(executor, _1_1, TYP_tosca_c_c_TNodeType_4));\n\t\t\t\t\t\t//\n\t\t\t\t\t\taccumulator_2.add(oclAsType_2);\n\t\t\t\t\t}\n\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.BagValue%&gt;.Accumulator accumulator_3 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createBagAccumulatorValue(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.BAG_CLSSid_CapabilityDefinitionsType1);\n\t\t\t\t\t/*@NonNull\052/ &lt;%java.util.Iterator%&gt;&lt;&lt;%java.lang.Object%&gt;&gt; ITERATOR__1_2 = collect_2.iterator();\n\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.BagValue%&gt; collect_1;\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tif (!ITERATOR__1_2.hasNext()) {\n\t\t\t\t\t\t\tcollect_1 = accumulator_3;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt; _1_2 = (&lt;%de.ugoe.cs.oco.tosca.TNodeType%&gt;)ITERATOR__1_2.next();\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * capabilityDefinitions\n\t\t\t\t\t\t \052/\n\t\t\t\t\t\tfinal /*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.CapabilityDefinitionsType1%&gt; capabilityDefinitions_1 = _1_2.getCapabilityDefinitions();\n\t\t\t\t\t\t//\n\t\t\t\t\t\taccumulator_3.add(capabilityDefinitions_1);\n\t\t\t\t\t}\n\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.BagValue%&gt;.Accumulator accumulator_4 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createBagAccumulatorValue(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.BAG_CLSSid_CapabilityDefinitionsType1);\n\t\t\t\t\t/*@Nullable\052/ &lt;%java.util.Iterator%&gt;&lt;&lt;%java.lang.Object%&gt;&gt; ITERATOR_cd = collect_1.iterator();\n\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.BagValue%&gt; select;\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tif (!ITERATOR_cd.hasNext()) {\n\t\t\t\t\t\t\tselect = accumulator_4;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.CapabilityDefinitionsType1%&gt; cd = (&lt;%de.ugoe.cs.oco.tosca.CapabilityDefinitionsType1%&gt;)ITERATOR_cd.next();\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * cd &lt;&gt; null\n\t\t\t\t\t\t \052/\n\t\t\t\t\t\tfinal /*@NonInvalid\052/ boolean ne_3 = cd != null;\n\t\t\t\t\t\t//\n\t\t\t\t\t\tif (ne_3 == &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.TRUE_VALUE) {\n\t\t\t\t\t\t\taccumulator_4.add(cd);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.BagValue%&gt;.Accumulator accumulator_5 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createBagAccumulatorValue(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.BAG_CLSSid_TCapabilityType);\n\t\t\t\t\t/*@Nullable\052/ &lt;%java.util.Iterator%&gt;&lt;&lt;%java.lang.Object%&gt;&gt; ITERATOR__1_4 = select.iterator();\n\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.BagValue%&gt; collect_0;\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tif (!ITERATOR__1_4.hasNext()) {\n\t\t\t\t\t\t\tcollect_0 = accumulator_5;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.CapabilityDefinitionsType1%&gt; _1_4 = (&lt;%de.ugoe.cs.oco.tosca.CapabilityDefinitionsType1%&gt;)ITERATOR__1_4.next();\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * capabilityDefinition.capabilityTypeRef\n\t\t\t\t\t\t \052/\n\t\t\t\t\t\tif (_1_4 == null) {\n\t\t\t\t\t\t\tthrow new &lt;%org.eclipse.ocl.pivot.values.InvalidValueException%&gt;(\"Null source for \\\'\\\'http://oco.cs.ugoe.de/tosca\\\'::CapabilityDefinitionsType1::capabilityDefinition\\\'\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfinal /*@Thrown\052/ &lt;%java.util.List%&gt;&lt;&lt;%de.ugoe.cs.oco.tosca.TCapabilityDefinition%&gt;&gt; capabilityDefinition_0 = _1_4.getCapabilityDefinition();\n\t\t\t\t\t\tfinal /*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.OrderedSetValue%&gt; BOXED_capabilityDefinition_0 = idResolver.createOrderedSetOfAll(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.ORD_CLSSid_TCapabilityDefinition, capabilityDefinition_0);\n\t\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.SequenceValue%&gt;.Accumulator accumulator_6 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createSequenceAccumulatorValue(&lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.SEQ_CLSSid_TCapabilityType);\n\t\t\t\t\t\t/*@NonNull\052/ &lt;%java.util.Iterator%&gt;&lt;&lt;%java.lang.Object%&gt;&gt; ITERATOR__1_3 = BOXED_capabilityDefinition_0.iterator();\n\t\t\t\t\t\t/*@Thrown\052/ &lt;%org.eclipse.ocl.pivot.values.SequenceValue%&gt; collect_3;\n\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\tif (!ITERATOR__1_3.hasNext()) {\n\t\t\t\t\t\t\t\tcollect_3 = accumulator_6;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TCapabilityDefinition%&gt; _1_3 = (&lt;%de.ugoe.cs.oco.tosca.TCapabilityDefinition%&gt;)ITERATOR__1_3.next();\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * capabilityTypeRef\n\t\t\t\t\t\t\t \052/\n\t\t\t\t\t\t\tfinal /*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TCapabilityType%&gt; capabilityTypeRef_0 = _1_3.getCapabilityTypeRef();\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\taccumulator_6.add(capabilityTypeRef_0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//\n\t\t\t\t\t\tfor (Object value : collect_3.flatten().getElements()) {\n\t\t\t\t\t\t\taccumulator_5.add(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfinal /*@NonInvalid\052/ &lt;%de.ugoe.cs.oco.tosca.TEntityType%&gt; typeRef_4 = _1_5.getTypeRef();\n\t\t\t\t\tfinal /*@Thrown\052/ boolean includes_0 = &lt;%org.eclipse.ocl.pivot.library.collection.CollectionIncludesOperation%&gt;.INSTANCE.evaluate(collect_0, typeRef_4).booleanValue();\n\t\t\t\t\tCAUGHT_includes_0 = includes_0;\n\t\t\t\t}\n\t\t\t\tcatch (&lt;%java.lang.Exception%&gt; e) {\n\t\t\t\t\tCAUGHT_includes_0 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createInvalidValue(e);\n\t\t\t\t}\n\t\t\t\tfinal /*@Thrown\052/ &lt;%java.lang.Boolean%&gt; or = &lt;%org.eclipse.ocl.pivot.library.logical.BooleanOrOperation%&gt;.INSTANCE.evaluate(CAUGHT_and_0, CAUGHT_includes_0);\n\t\t\t\tCAUGHT_or = or;\n\t\t\t}\n\t\t\tcatch (&lt;%java.lang.Exception%&gt; e) {\n\t\t\t\tCAUGHT_or = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.createInvalidValue(e);\n\t\t\t}\n\t\t\t//\n\t\t\tif (CAUGHT_or == &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.FALSE_VALUE) {\t\t\t\t\t// Normal unsuccessful body evaluation result\n\t\t\t\tforAll = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.FALSE_VALUE;\n\t\t\t\tbreak;\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Stop immediately\n\t\t\t}\n\t\t\telse if (CAUGHT_or == &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.TRUE_VALUE) {\t\t\t\t// Normal successful body evaluation result\n\t\t\t\t;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Carry on\n\t\t\t}\n\t\t\telse if (CAUGHT_or == null) {\t\t\t\t\t\t\t\t// Abnormal null body evaluation result\n\t\t\t\tif (accumulator == &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.TRUE_VALUE) {\n\t\t\t\t\taccumulator = null;\t\t\t\t\t\t\t\t\t\t// Cache a null failure\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (CAUGHT_or instanceof &lt;%org.eclipse.ocl.pivot.values.InvalidValueException%&gt;) {\t\t// Abnormal exception evaluation result\n\t\t\t\taccumulator = CAUGHT_or;\t\t\t\t\t\t\t\t\t// Cache an exception failure\n\t\t\t}\n\t\t\telse {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Impossible badly typed result\n\t\t\t\taccumulator = new &lt;%org.eclipse.ocl.pivot.values.InvalidValueException%&gt;(&lt;%org.eclipse.ocl.pivot.messages.PivotMessages%&gt;.NonBooleanBody, \"forAll\");\n\t\t\t}\n\t\t}\n\t\tif (forAll == null) {\n\t\t\tthrow new &lt;%org.eclipse.ocl.pivot.values.InvalidValueException%&gt;(\"Null if condition\");\n\t\t}\n\t\t/*@NonInvalid\052/ &lt;%java.lang.Boolean%&gt; symbol_3;\n\t\tif (forAll) {\n\t\t\tsymbol_3 = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.TRUE_VALUE;\n\t\t}\n\t\telse {\n\t\t\tsymbol_3 = null;\n\t\t}\n\t\tresult = symbol_3;\n\t}\n\telse {\n\t\tresult = &lt;%org.eclipse.ocl.pivot.utilities.ValueUtil%&gt;.TRUE_VALUE;\n\t}\n\tfinal /*@NonInvalid\052/ boolean logDiagnostic = &lt;%org.eclipse.ocl.pivot.library.string.CGStringLogDiagnosticOperation%&gt;.INSTANCE.evaluate(executor, &lt;%org.eclipse.ocl.pivot.ids.TypeId%&gt;.BOOLEAN, &lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.STR_TNodeTemplate_c_c_capabilitiesMustBeDefinedInReferencedNodeType, this, (Object)null, diagnostics, context, (Object)null, severity_0, result, &lt;%de.ugoe.cs.oco.tosca.ToscaTables%&gt;.INT_0).booleanValue();\n\tsymbol_4 = logDiagnostic;\n}\nreturn Boolean.TRUE == symbol_4;'"
	 * @generated
	 */
	boolean capabilitiesMustBeDefinedInReferencedNodeType(DiagnosticChain diagnostics, Map<Object, Object> context);

} // TNodeTemplate
